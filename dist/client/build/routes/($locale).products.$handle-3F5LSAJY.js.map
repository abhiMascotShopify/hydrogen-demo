{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).products.$handle.jsx", "../../../../app/components/ProductsCorousel.jsx"],
  "sourcesContent": ["import {Suspense} from 'react';\nimport {defer, redirect} from '@shopify/remix-oxygen';\nimport {Await, Link, useLoaderData} from '@remix-run/react';\nimport React, {useState} from 'react';\nimport ProductsCorousel from '~/components/ProductsCorousel';\n\nimport {\n  Image,\n  Money,\n  VariantSelector,\n  getSelectedProductOptions,\n  CartForm,\n} from '@shopify/hydrogen';\nimport {getVariantUrl} from '~/utils';\n\nexport const meta = ({data}) => {\n  return [{title: `Hydrogen | ${data.product.title}`}];\n};\n\nexport async function loader({params, request, context}) {\n  const {handle} = params;\n  const {storefront} = context;\n\n  const selectedOptions = getSelectedProductOptions(request).filter(\n    (option) =>\n      // Filter out Shopify predictive search query params\n      !option.name.startsWith('_sid') &&\n      !option.name.startsWith('_pos') &&\n      !option.name.startsWith('_psq') &&\n      !option.name.startsWith('_ss') &&\n      !option.name.startsWith('_v'),\n  );\n\n  if (!handle) {\n    throw new Error('Expected product handle to be defined');\n  }\n\n  // await the query for the critical product data\n  const {product} = await storefront.query(PRODUCT_QUERY, {\n    variables: {handle, selectedOptions},\n  });\n\n  const products = await storefront.query(PRODUCTS_QUERY);\n  // console.log(products.products.edges);\n\n  const productsreturn = products.products;\n  //console.log(product.variants.nodes[0].image.url);\n  //console.log(product.variants.nodes[0]);\n\n  // In order to show which variants are available in the UI, we need to query\n  // all of them. But there might be a *lot*, so instead separate the variants\n  // into it's own separate query that is deferred. So there's a brief moment\n  // where variant options might show as available when they're not, but after\n  // this deffered query resolves, the UI will update.\n  const variants = storefront.query(VARIANTS_QUERY, {\n    variables: {handle},\n  });\n\n  if (!product?.id) {\n    throw new Response(null, {status: 404});\n  }\n\n  const firstVariant = product.variants.nodes[0];\n  const firstVariantIsDefault = Boolean(\n    firstVariant.selectedOptions.find(\n      (option) => option.name === 'Title' && option.value === 'Default Title',\n    ),\n  );\n\n  if (firstVariantIsDefault) {\n    product.selectedVariant = firstVariant;\n  } else {\n    // if no selected variant was returned from the selected options,\n    // we redirect to the first variant's url with it's selected options applied\n    if (!product.selectedVariant) {\n      return redirectToFirstVariant({product, request});\n    }\n  }\n  return defer({product, variants, productsreturn});\n}\n\nfunction redirectToFirstVariant({product, request}) {\n  const url = new URL(request.url);\n  const firstVariant = product.variants.nodes[0];\n\n  throw redirect(\n    getVariantUrl({\n      pathname: url.pathname,\n      handle: product.handle,\n      selectedOptions: firstVariant.selectedOptions,\n      searchParams: new URLSearchParams(url.search),\n    }),\n    {\n      status: 302,\n    },\n  );\n}\n\n//const [activeImg, setActiveImage] = useState(0)\n\nexport default function Product() {\n  const {product, variants, productsreturn} = useLoaderData();\n  const {selectedVariant} = product;\n  //console.log(productsreturn);\n  return (\n    <>\n      {/*<ProductVariantColrousel className=\"col-span-1 overflow-x-auto\" product={product}></ProductVariantColrousel>*/}\n      {/*<ProductImage image={selectedVariant?.image} />*/}\n      <ProductMain\n        selectedVariant={selectedVariant}\n        product={product}\n        variants={variants}\n      />\n      {productsreturn && <ProductsCorousel products={productsreturn} />}\n    </>\n  );\n}\n\nfunction ProductImage({image, activeImg, setActiveImage, product}) {\n  const ImageSrc = [];\n\n  product.images.edges.forEach((item) => {\n    ImageSrc.push(item.node.url);\n  });\n\n  //console.log(ImageSrc)\n\n  const [images, setImages] = useState(ImageSrc);\n  //const [activeImg, setActiveImage] = useState(images[0])\n  // console.log(image)\n  if (!image) {\n    return <div className=\"\" />;\n  }\n  return (\n    <>\n      <div className=\"lg:grid flex flex-col-reverse lg:grid-cols-[20%_80%] gap-2 lg:gap-0 items-center\">\n        <div className=\"flex  lg:flex-col  justify-between lg:h-[325px] overflow-x-auto gap-[5px]\">\n          {product.images.edges &&\n            product.images.edges.map((item, index) => (\n              <img\n                src={images[index]}\n                alt=\"\"\n                className=\"w-24 h-24 rounded-md cursor-pointer product-image-caro\"\n                onClick={() => setActiveImage(images[index])}\n              />\n            ))}\n        </div>\n        <img\n          src={activeImg}\n          alt=\"\"\n          className=\"w-[90%] border border-[#e5e5e5] h-full aspect-square object-cover rounded-xl p-[10px] border-1 border-[#e5e5e5]\"\n        />\n      </div>\n    </>\n  );\n}\n\nfunction ProductMain({selectedVariant, product, variants}) {\n  {\n    /*const {title, descriptionHtml} = product;\n  return (\n    <div className=\"col-span-5\">\n      <h1>{title}</h1>\n      <ProductPrice selectedVariant={selectedVariant} />\n      <div className='shadow-2xl bg-grey'>\n      AVAILABLE OFFERS!!\n      </div>\n      <br />\n      <Suspense\n        fallback={\n          <ProductForm\n            product={product}\n            selectedVariant={selectedVariant}\n            variants={[]}\n          />\n        }\n      >\n        <Await\n          errorElement=\"There was a problem loading product variants\"\n          resolve={variants}\n        >\n          {(data) => (\n            <ProductForm\n              product={product}\n              selectedVariant={selectedVariant}\n              variants={data.product?.variants.nodes || []}\n            />\n          )}\n        </Await>\n      </Suspense>\n      <br />\n      <br />\n      <p>\n        <strong>Description</strong>\n      </p>\n      <br />\n      <div dangerouslySetInnerHTML={{__html: descriptionHtml}} />\n      <br />\n    </div>\n          );*/\n  }\n\n  //console.log(product)\n\n  /*const [images, setImages] = useState({\n              img0 : \"https://static.nike.com/a/images/t_PDP_1280_v1/f_auto,b_rgb:f5f5f5/3396ee3c-08cc-4ada-baa9-655af12e3120/scarpa-da-running-su-strada-invincible-3-xk5gLh.png\",\n              img1 : \"https://static.nike.com/a/images/f_auto,b_rgb:f5f5f5,w_440/e44d151a-e27a-4f7b-8650-68bc2e8cd37e/scarpa-da-running-su-strada-invincible-3-xk5gLh.png\",\n              img2 : \"https://static.nike.com/a/images/f_auto,b_rgb:f5f5f5,w_440/44fc74b6-0553-4eef-a0cc-db4f815c9450/scarpa-da-running-su-strada-invincible-3-xk5gLh.png\",\n              img3 : \"https://static.nike.com/a/images/f_auto,b_rgb:f5f5f5,w_440/d3eb254d-0901-4158-956a-4610180545e5/scarpa-da-running-su-strada-invincible-3-xk5gLh.png\"\n          })*/\n  const ImageSrc = [];\n\n  product.images.edges.forEach((item) => {\n    ImageSrc.push(item.node.url);\n  });\n\n  //console.log(ImageSrc)\n\n  const [images, setImages] = useState(ImageSrc);\n\n  const expaction = product.metafields[0].value;\n  //console.log(expaction)\n  const key_ingredients = product.metafields[1].value;\n  const How_To_use = product.metafields[2].value;\n  const who_can_use = product.metafields[3].value;\n  const why_us = product.metafields[4].value;\n  //console.log(why_us);\n\n  const [activeTab, setActiveTab] = useState('Key Ingredients');\n\n  const handleTabClick = (tab) => {\n    setActiveTab(tab);\n  };\n\n  const [activeImg, setActiveImage] = useState(images[0]);\n\n  const [amount, setAmount] = useState(1);\n  //<img src={images[0]} alt=\"\" className='w-24 h-24 rounded-md cursor-pointer' onClick={() => setActiveImage(images[0])}/>\n  //<img src={images[1]} alt=\"\" className='w-24 h-24 rounded-md cursor-pointer' onClick={() => setActiveImage(images[1])}/>\n  const [moreText, setMoreText] = useState(true);\n  const [moreOffer, setMoreOffer] = useState(false);\n\n  return (\n    <>\n      {/*<ProductImage image={selectedVariant?.image} />*/}\n      <div className=\"flex m-[2%] gap-2 items-center\">\n        <span>Home</span>\n        <img src=\"/next.png\" alt=\"next\" width={20} height={20} />\n        <span className=\"font-semibold\">Product page</span>\n      </div>\n      <div className=\"final-product shadow-lg p-4 flex flex-col justify-between lg:flex-row lg:gap-8 lg:ml-8 lg:mr-8 items-start relative\">\n        <div className=\"flex flex-col gap-6 lg:w-2/4 flex-wrap items-center lg:sticky top-[240px]\">\n          {/*<img src={activeImg} alt=\"\" className='w-full h-full aspect-square object-cover rounded-xl'/>\n                    <div className='flex flex-row justify-between h-full overflow-y-auto'>\n                      {product.images.edges && product.images.edges.map((item,index)=>(\n                        <img src={images[index]} alt=\"\" className='w-24 h-24 rounded-md cursor-pointer' onClick={() => setActiveImage(images[index])}/>\n                      ))\n                      }\n                    </div>*/}\n          <ProductImage\n            image={selectedVariant?.image}\n            product={product}\n            activeImg={activeImg}\n            setActiveImage={setActiveImage}\n          />\n        </div>\n        {/* ABOUT */}\n        <div className=\"flex flex-col lg:w-3/4\">\n          <div>\n            {/*<!--h6 className='text-2xl font-semibold'></h6 -->*/}\n            {/*<span className=' text-violet-600 font-semibold'>Special Sneaker</span>*/}\n            <h1 className=\"text-2xl font-semibold mt-0 mb-[15px]\">\n              {product.title}\n            </h1>\n            <ProductPrice selectedVariant={selectedVariant} />\n          </div>\n          <div>\n            <Suspense\n              fallback={\n                <ProductForm\n                  product={product}\n                  selectedVariant={selectedVariant}\n                  variants={[]}\n                  activeImg={activeImg}\n                  setActiveImage={setActiveImage}\n                />\n              }\n            >\n              <Await\n                errorElement=\"There was a problem loading product variants\"\n                resolve={variants}\n              >\n                {(data) => (\n                  <ProductForm\n                    product={product}\n                    selectedVariant={selectedVariant}\n                    variants={data.product?.variants.nodes || []}\n                  />\n                )}\n              </Await>\n            </Suspense>\n          </div>\n          <h2 className=\"mt-[10px]\">Product Description</h2>\n          <div className=\"shadow-p sm:mt-[20px] relative px-[15px] py-[10px]\">\n            <p className=\"text-gray-700\">\n              {product.description.substr(0, 200)}\n            </p>\n            {moreText && (\n              <>\n                <p className=\"text-gray-700\">{product.description}</p>\n                <div className=\"mt-4 ml-[5%]\">\n                  <strong>Features:</strong>\n                  <ul className=\"list-disc text-sm ml-[5%] font-semibold\">\n                    <li>\n                      This long-lasting liquid lipstick coats your lips in a\n                      rich creamy layer of pigment\n                    </li>\n                    <li>\n                      The formula is smudge-proof, water-resistant and\n                      transfer-proof\n                    </li>\n                    <li>\n                      Glides effortlessly over your lips and perfects your pout\n                      in one swipe while offering full coverage\n                    </li>\n                    <li>\n                      The non-sticky, lightweight formula stays put without\n                      creasing and drying and leaves your lips smooth\n                    </li>\n                    <li>\n                      Infused with lip-nourishing oils, this matte mousse\n                      lipstick is ultra-hydrating\n                    </li>\n                    <li>\n                      All SUGAR POP products are 100% vegetarian, cruelty-free\n                      and paraben-free\n                    </li>\n                  </ul>\n                  <em>Indulge in a creamy matte affair!</em>\n                  <p>\n                    SUGAR POP Matte Mousse Lipstick is an ultra-matte liquid\n                    lipstick that coats your lips in a rich creamy layer of\n                    pigment. The lightweight mousse formula glides on super\n                    smooth and perfects your pout in a single swipe while\n                    offering full coverage. No need to worry about lipstick\n                    smears, as this water-resistant lippie does not transfer or\n                    smudge for up to 10 hours. Enriched with nourishing oils,\n                    this matte liquid lipstick not only hydrates your lips but\n                    also prevents them from drying out. Choose from a striking\n                    range of nudes, pinks, reds and bold hues that are perfect\n                    for any occasion or mood\n                  </p>\n                  <strong>Benefits:</strong>\n                  <ul className=\"list-disc ml-[5%]\">\n                    <li>Full-coverage</li>\n                    <li>Lasts up to 10 hours</li>\n                    <li>\n                      <span>Transfer-proof</span>\n                    </li>\n                    <li>Smudge-proof</li>\n                    <li>Lightweight</li>\n                    <li>Highly pigmented</li>\n                    <li>Water-resistant formula</li>\n                  </ul>\n                </div>\n              </>\n            )}\n            {moreText ? (\n              <span\n                className=\"text-red-700 moreLink\"\n                onClick={() => setMoreText(!moreText)}\n              >\n                less-\n              </span>\n            ) : (\n              <span\n                className=\"text-red-700 moreLink\"\n                onClick={() => setMoreText(!moreText)}\n              >\n                more+\n              </span>\n            )}\n          </div>\n\n          <h2 className=\"mt-[20px]\">VIEW ALL OFFERS</h2>\n          <div className=\"sm:mt-[30px]  relative px-[15px] py-[10px] shadow-p\">\n            <ul className=\"list-disc px-2 text-[14px] font-semibold\">\n              <li>FREE Mivi Play Bluetooth Speakers on a spend of Rs.2199</li>\n              <li>Holographic Pouch + Liquid Lipstick on a spend of Rs.599</li>\n              {moreOffer && (\n                <>\n                  <li>\n                    Holographic Pouch + Liquid Lipstick on a spend of Rs.599\n                  </li>\n                  <li>\n                    Holographic Pouch + Liquid Lipstick on a spend of Rs.599\n                  </li>\n                </>\n              )}\n            </ul>\n            {moreOffer ? (\n              <span\n                className=\"text-red-700 moreLink\"\n                onClick={() => setMoreOffer(!moreOffer)}\n              >\n                less-\n              </span>\n            ) : (\n              <span\n                className=\"text-red-700 moreLink\"\n                onClick={() => setMoreOffer(!moreOffer)}\n              >\n                more+\n              </span>\n            )}\n          </div>\n        </div>\n        <div className=\"absolute cursor-pointer flex flex-col items-center top-[-36px] lg:top-[15px] right-2\">\n          <img\n            className=\"sharelogo\"\n            src=\"/share.png\"\n            width={24}\n            height={24}\n            alt=\"share\"\n          />\n          <span className=\"text-sm font-semibold \">Share</span>\n        </div>\n      </div>\n      <div className=\"max-w-[1320px] p-[10px] m-auto\">\n        <div>\n          <h2 className=\"text-center lg:text-2xl mt-[4%] mb-[2%]\">\n            What to Expect from {product.title} ?\n          </h2>\n          {expaction && (\n            <div\n              className=\"expect\"\n              dangerouslySetInnerHTML={{__html: expaction}}\n            />\n          )}\n        </div>\n        <div className=\"container mx-auto mt-5\">\n          <h1 className=\"lg:text-3xl font-semibold mb-4 text-center mt-[4%] mb-[2%]\">\n            Product Information\n          </h1>\n          <div className=\"flex space-x-4 overflow-y-auto lg:justify-center my-[20px]\">\n            <div\n              className={`cursor-pointer py-2 lg:px-8 px-4  whitespace-nowrap ${\n                activeTab === 'Key Ingredients' ? 'border-active' : ''\n              }`}\n              onClick={() => handleTabClick('Key Ingredients')}\n              style={{border: '1px solid #e5e5e5'}}\n            >\n              Key Ingredients\n            </div>\n            <div\n              className={`cursor-pointer py-2 lg:px-8 px-4 border-b-4 whitespace-nowrap ${\n                activeTab === 'How to Use' ? 'border-active' : ''\n              }`}\n              onClick={() => handleTabClick('How to Use')}\n              style={{border: '1px solid #e5e5e5'}}\n            >\n              How to Use\n            </div>\n            <div\n              className={`cursor-pointer py-2 lg:px-8 px-4 border-b-4 whitespace-nowrap ${\n                activeTab === 'Who Can Use' ? 'border-active' : ''\n              }`}\n              onClick={() => handleTabClick('Who Can Use')}\n              style={{border: '1px solid #e5e5e5'}}\n            >\n              Who Can Use\n            </div>\n            <div\n              className={`cursor-pointer py-2 lg:px-8 px-4 border-b-4 whitespace-nowrap ${\n                activeTab === 'Why us' ? 'border-active' : ''\n              }`}\n              onClick={() => handleTabClick('Why us')}\n              style={{border: '1px solid #e5e5e5'}}\n            >\n              Why us\n            </div>\n          </div>\n          <div className=\"mt-4\">\n            {activeTab === 'Key Ingredients' && key_ingredients && (\n              <div className=\"overflow-y-auto overflow-x-auto\">\n                {key_ingredients && (\n                  <div\n                    className=\"expect\"\n                    dangerouslySetInnerHTML={{__html: key_ingredients}}\n                  />\n                )}\n              </div>\n            )}\n            {activeTab === 'How to Use' && How_To_use && (\n              <div className=\"overflow-y-auto\">\n                <div\n                  className=\"key-ing\"\n                  dangerouslySetInnerHTML={{__html: How_To_use}}\n                />\n              </div>\n            )}\n            {activeTab === 'Who Can Use' && who_can_use && (\n              <div className=\"overflow-y-auto\">\n                <div dangerouslySetInnerHTML={{__html: who_can_use}} />\n              </div>\n            )}\n            {activeTab === 'Why us' && why_us && (\n              <div className=\"overflow-y-auto\">\n                <div dangerouslySetInnerHTML={{__html: why_us}} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n//{\"type\":\"root\",\"children\":[{\"type\":\"paragraph\",\"children\":[{\"type\":\"text\",\"value\":\"Onion, in combination with coconut, reduces hair fall and promotes growth of lost hair.\"}]}]}\n\nfunction ProductPrice({selectedVariant}) {\n  return (\n    <div className=\"product-price flex gap-[10px]\">\n      {selectedVariant?.compareAtPrice ? (\n        <>\n          <div className=\"product-price-on-sale font-semibold\">\n            {selectedVariant ? <Money data={selectedVariant.price} /> : null}\n            <s>\n              <Money data={selectedVariant.compareAtPrice} />\n            </s>\n          </div>\n        </>\n      ) : (\n        selectedVariant?.price && (\n          <Money className=\"font-semibold\" data={selectedVariant?.price} />\n        )\n      )}\n      <div>\n        <span className=\"font-semibold bg-[#e1eecc] py-1 px-2 text-sm rounded\">\n          FREE SHIPPING\n        </span>\n      </div>\n    </div>\n  );\n}\n\nfunction ProductForm({\n  product,\n  selectedVariant,\n  variants,\n  activeImg,\n  setActiveImage,\n}) {\n  return (\n    <div className=\"product-form\">\n      <VariantSelector\n        handle={product.handle}\n        options={product.options}\n        variants={variants}\n      >\n        {({option}) => (\n          <ProductOptions\n            key={option.name}\n            option={option}\n            activeImg={activeImg}\n            setActiveImage={setActiveImage}\n          />\n        )}\n      </VariantSelector>\n      <br />\n\n      <AddToCartButton\n        disabled={!selectedVariant || !selectedVariant.availableForSale}\n        onClick={() => {\n          window.location.href = window.location.href + '#cart-aside';\n        }}\n        lines={\n          selectedVariant\n            ? [\n                {\n                  merchandiseId: selectedVariant.id,\n                  quantity: 1,\n                },\n              ]\n            : []\n        }\n      >\n        {selectedVariant?.availableForSale ? 'ADD TO CART' : 'Sold out'}\n      </AddToCartButton>\n    </div>\n  );\n}\n\nfunction ProductOptions({option, activeImg, setActiveImage}) {\n  const [more, setMore] = useState(false);\n  const [moreContent, setMoreContent] = useState('+View More');\n\n  return (\n    <>\n      <div className=\"product-options\" key={option.name}>\n        <h5 className=\"font-semibold\">{option.name}</h5>\n        <div className=\"product-options-grid items-center\">\n          {option.values.map(({value, isAvailable, isActive, to}) => {\n            return (\n              <Link\n                className=\"product-options-item\"\n                key={option.name + value}\n                prefetch=\"intent\"\n                preventScrollReset\n                replace\n                to={to}\n                style={{\n                  border: isActive\n                    ? '1px solid black'\n                    : '1px solid transparent',\n                  opacity: isAvailable ? 1 : 0.3,\n                  borderRadius: '5px',\n                }}\n                onClick={() => {\n                  setActiveImage(selectedVariant?.image.url);\n                }}\n              >\n                <div dangerouslySetInnerHTML={{__html: value}} />\n              </Link>\n            );\n          })}\n        </div>\n        <br />\n      </div>\n      <div className=\"bg-[#f7f7f7] py-[10px] pl-[50px]\">\n        <h2 className=\"text-[16px]\">AVAILABLE OFFERS!!</h2>\n        <ul className=\"text-[#757575] list-disc\">\n          <li>FREE Mivi Play Bluetooth Speakers on a spend of Rs.2199</li>\n          <li>Holographic Pouch + Liquid Lipstick on a spend of Rs.599</li>\n\n          {more && (\n            <>\n              <li>Shop for Rs.999 and get Flat Rs.100 off</li>\n              <li>Shop for Rs.1299 and get Flat Rs.200 off</li>\n              <li>Shop for Rs.1499 and get Flat Rs.300 off</li>\n            </>\n          )}\n          <span\n            onClick={() => {\n              setMore(!more),\n                setMoreContent(\n                  moreContent === '+View More' ? '-View Less' : '+View More',\n                );\n            }}\n            className=\"text-red-700 cursor-pointer\"\n          >\n            {moreContent}\n          </span>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nfunction AddToCartButton({analytics, children, disabled, lines, onClick}) {\n  const [amount, setAmount] = useState(1);\n  lines[0].quantity = amount;\n  console.log(lines[0].merchandiseId);\n  return (\n    <>\n      <CartForm\n        route=\"/cart\"\n        inputs={{lines}}\n        action={CartForm.ACTIONS.LinesAdd}\n      >\n        {(fetcher) => (\n          <>\n            <input\n              name=\"analytics\"\n              type=\"hidden\"\n              value={JSON.stringify(analytics)}\n            />\n            <div className=\"flex flex-row items-center gap-4 mobile-cart-product\">\n              <div\n                className=\"flex flex-row items-center py-[6px] px-[8px] rounded-xl\"\n                style={{border: '1px solid #000', background: 'white'}}\n              >\n                <button\n                  className=\" text-xl\"\n                  onClick={() => {\n                    if (amount != 0) {\n                      setAmount((prev) => prev - 1);\n                    }\n                  }}\n                >\n                  -\n                </button>\n                <span className=\"px-4\">{amount}</span>\n                <button\n                  className=\" text-xl\"\n                  onClick={() => setAmount((prev) => prev + 1)}\n                >\n                  +\n                </button>\n              </div>\n              <button\n                className=\"w-[150px] h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 px-4 rounded-lg\"\n                type=\"submit\"\n                onClick={onClick}\n                disabled={disabled ?? fetcher.state !== 'idle'}\n              >\n                {children}\n              </button>\n            </div>\n          </>\n        )}\n      </CartForm>\n      <p\n        className=\"lg:mt-6\"\n        style={{width: '100%', borderBottom: '1px dashed #bdbdbd'}}\n      ></p>\n      <div className=\"mt-2\">\n        <img src=\"/BrandBand.svg\" alt=\"brand\" />\n      </div>\n      <p\n        className=\"mt-2\"\n        style={{width: '100%', borderBottom: '1px dashed #bdbdbd'}}\n      ></p>\n    </>\n  );\n}\n\nfunction ProductVariantColrousel(product) {\n  return (\n    <div>\n      <ul className=\"space-y-2\">\n        <li>\n          <a href=\"#\" className=\"text-blue-500 hover:underline\">\n            {/* {product.product.images.edges.map((url)=>(\n            <img src={url.node.url} ></img>\n          ))}*/}\n            {/*console.log(product.product.images)*/}\n            {product.product.variants.nodes.map((url) => (\n              <img src={url.image.url}></img>\n            ))}\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n}\n//variants.nodes[0].image.url\nconst PRODUCT_VARIANT_FRAGMENT = `#graphql\n  fragment ProductVariant on ProductVariant {\n    availableForSale\n    compareAtPrice {\n      amount\n      currencyCode\n    }\n    id\n    image {\n      __typename\n      id\n      url\n      altText\n      width\n      height\n    }\n    price {\n      amount\n      currencyCode\n    }\n    product {\n      title\n      handle\n    }\n    quantityAvailable\n    selectedOptions {\n      name\n      value\n    }\n    sku\n    title\n    unitPrice {\n      amount\n      currencyCode\n    }\n  }\n`;\n\nconst PRODUCT_FRAGMENT = `#graphql\n  fragment Product on Product {\n    id\n    title\n    vendor\n    handle\n    descriptionHtml\n    description\n    tags\n    productType\n    metafields(identifiers: [{namespace: \"custom\", key: \"what_to_expect\"},{namespace: \"custom\", key: \"key_ingredients\"}, {namespace: \"custom\", key: \"how_to_use1\"},{namespace: \"custom\", key: \"who_can_use\"},{namespace: \"custom\", key: \"why_we\"} ]){\n      key\n      value\n    }\n    images(first:10){\n      edges{\n        node{\n          url\n        }\n      }\n    }\n    options {\n      name\n      values\n    }\n    selectedVariant: variantBySelectedOptions(selectedOptions: $selectedOptions) {\n      ...ProductVariant\n    }\n    variants(first: 10) {\n      nodes {\n        ...ProductVariant\n      }\n    }\n    seo {\n      description\n      title\n    }\n  }\n  ${PRODUCT_VARIANT_FRAGMENT}\n`;\n\nconst PRODUCT_QUERY = `#graphql\n  query Product(\n    $country: CountryCode\n    $handle: String!\n    $language: LanguageCode\n    $selectedOptions: [SelectedOptionInput!]!\n  ) @inContext(country: $country, language: $language) {\n    product(handle: $handle) {\n      ...Product\n    }\n  }\n  ${PRODUCT_FRAGMENT}\n`;\n\nconst PRODUCT_VARIANTS_FRAGMENT = `#graphql\n  fragment ProductVariants on Product {\n    variants(first: 50) {\n      nodes {\n        ...ProductVariant\n      }\n    }\n  }\n  ${PRODUCT_VARIANT_FRAGMENT}\n`;\n\nconst VARIANTS_QUERY = `#graphql\n  ${PRODUCT_VARIANTS_FRAGMENT}\n  query ProductVariants(\n    $country: CountryCode\n    $language: LanguageCode\n    $handle: String!\n  ) @inContext(country: $country, language: $language) {\n    product(handle: $handle) {\n      ...ProductVariants\n    }\n  }\n`;\n\nconst PRODUCTS_QUERY = `#graphql\n  query {\n  products(first: 250, query:\"tags:* Under 100 OR Under 1000\"){\n    edges{\n      node{\n        id\n        title\n        handle\n        tags\n        images(first:1){\n          edges{\n            node{\n              url\n              id\n            }\n          }\n        }\n        featuredImage {\n          id\n        }\n      }\n    }\n}\n  }\n`;\n/*\nfunction JsonToHtml({ json }) {\n  const renderChildren = (children) => {\n    return children.map((child, index) => {\n      if (child.type === 'paragraph') {\n        // If the type is 'paragraph', create a <p> element\n        return <p key={index}>{child.children[0].value}</p>;\n      } else if (child.type === 'list') {\n        // Handle list elements as needed (e.g., ul, ol)\n        // You can add logic to create list elements here\n        return null;\n      } else {\n        // Handle other types or unknown types\n        return null;\n      }\n    });\n  };\n\n  return (\n    <div>\n      {renderChildren(json.children)}\n    </div>\n  );\n};\n*/\n", "// src/ProductCarousel.js\r\nimport React, {useState} from 'react';\r\nimport {MdChevronLeft, MdChevronRight} from 'react-icons/md';\r\nimport {Await, useLoaderData, Link} from '@remix-run/react';\r\nimport {useMediaQuery} from 'react-responsive';\r\n//import products from './products';\r\n\r\nconst ProductsCorousel = ({products}) => {\r\n  let productsToShow = [];\r\n  const [startIndex, setStartIndex] = useState(0);\r\n  //const [endIndex, setEndIndex]  = useState();\r\n  const isLargeScreen = useMediaQuery({minWidth: 1024});\r\n  const endIndex = isLargeScreen ? 4 : 2;\r\n  if (products != null || products != undefined) {\r\n    //console.log(products.edges[0].node)\r\n    productsToShow = products.slice(startIndex, startIndex + endIndex);\r\n    //console.log(productsToShow);\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-screen-xl mx-auto lg:px-24 sm:px-4 md:px-6 py-6\">\r\n      <div className=\"relative\">\r\n        <div className=\"flex mobile-productView\">\r\n          {productsToShow.map((product) => (\r\n            <div\r\n              key={product.node.id}\r\n              className=\"w-full sm:w-1/3 md:w-1/3 lg:px-4 sm:px-1 md:px-3\"\r\n            >\r\n              <div className=\"bg-white rounded-lg shadow-lg p-2 shadow-md\">\r\n                <img\r\n                  src={`${product.node.images.edges[0].node.url}`} // Make sure to put your images in the 'public/images/' directory\r\n                  alt={product.node.title}\r\n                  className=\"w-full h-auto\"\r\n                />\r\n                <Link key={product.id} to={`/products/${product.node.handle}`}>\r\n                  <h2 className=\"text-lg font-semibold mt-2 text-center\">\r\n                    {product.node.title}\r\n                  </h2>\r\n                </Link>\r\n                <div className=\"h-12\">\r\n                  <h1 className=\"text-center font-bold h-full w-full m-auto\">\r\n                    \u20B9255\r\n                  </h1>\r\n                </div>\r\n                {/* Add more product information here */}\r\n                <div className=\"px-1 py-1 flex justify-between items-center  sm:flex-row flex-row\">\r\n                  <div className=\"mr-3\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 32 33\"\r\n                      xmlSpace=\"preserve\"\r\n                      width=\"2.8em\"\r\n                      height=\"2.8em\"\r\n                    >\r\n                      <path\r\n                        d=\"M9 .5h14c4.7 0 8.5 3.8 8.5 8.5v14c0 4.7-3.8 8.5-8.5 8.5H9C4.3 31.5.5 27.7.5 23V9C.5 4.3 4.3.5 9 .5z\"\r\n                        fill=\"rgb(255, 255, 255)\"\r\n                        stroke=\"rgb(0, 0, 0)\"\r\n                      ></path>\r\n                      <path\r\n                        d=\"M22.3 11.8c.4.4.7.9.9 1.4.2.5.3 1.1.3 1.6 0 .6-.1 1.1-.3 1.6-.2.5-.5 1-.9 1.4l-5.6 5.6s-.1 0-.1.1h-.2s-.1 0-.1-.1l-5.6-5.6C10 17 9.5 16 9.5 14.9c0-1.1.3-2.1 1-2.9.7-.8 1.7-1.3 2.7-1.5 1.1-.1 2.1.2 3 .8l.3.2.3-.2c.8-.6 1.8-.9 2.8-.8 1.1.1 2 .5 2.7 1.3z\"\r\n                        fill=\"none\"\r\n                        stroke=\"rgb(0, 0, 0)\"\r\n                      ></path>\r\n                    </svg>\r\n                  </div>\r\n                  <button className=\"w-full h-11 bg-black hover:bg-blue-700 text-white text-[13px] sm:text-[18px] font-bold py-1 px-1 rounded-lg\">\r\n                    ADD TO Pro\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button\r\n          className=\"absolute left-0 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-50 rounded-full p-2 ml-4 hover:bg-opacity-75\"\r\n          onClick={() =>\r\n            setStartIndex((prevIndex) =>\r\n              prevIndex === 0\r\n                ? products.edges.length - (products.edges.length % 2)\r\n                : prevIndex,\r\n            )\r\n          }\r\n        >\r\n          <MdChevronLeft\r\n            className=\"opacity-50 cursor-pointer hover:opacity-100\"\r\n            size={40}\r\n          />\r\n        </button>\r\n        <button\r\n          className=\"absolute right-0 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-50 rounded-full p-2 mr-4 hover:bg-opacity-75\"\r\n          onClick={() =>\r\n            setStartIndex(\r\n              (prevIndex) => (prevIndex + 1) % products.edges.length,\r\n            )\r\n          }\r\n        >\r\n          <MdChevronRight\r\n            className=\"opacity-50 cursor-pointer hover:opacity-100\"\r\n            size={40}\r\n          />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsCorousel;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,gBAAuB;AAGvB,IAAAC,gBAA8B;;;ACF9B,mBAA8B;AAG9B,8BAA4B;AAyBZ;AAtBhB,IAAM,mBAAmB,CAAC,EAAC,SAAQ,MAAM;AACvC,MAAI,iBAAiB,CAAC;AACtB,QAAM,CAAC,YAAY,aAAa,QAAI,uBAAS,CAAC;AAE9C,QAAM,oBAAgB,uCAAc,EAAC,UAAU,KAAI,CAAC;AACpD,QAAM,WAAW,gBAAgB,IAAI;AACrC,MAAI,YAAY,QAAQ,YAAY,QAAW;AAE7C,qBAAiB,SAAS,MAAM,YAAY,aAAa,QAAQ;AAAA,EAEnE;AAEA,SACE,mDAAC,SAAI,WAAU,gEACb,6DAAC,SAAI,WAAU,YACb;AAAA,uDAAC,SAAI,WAAU,2BACZ,yBAAe,IAAI,CAAC,YACnB;AAAA,MAAC;AAAA;AAAA,QAEC,WAAU;AAAA,QAEV,6DAAC,SAAI,WAAU,+CACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,KAAK,GAAG,QAAQ,KAAK,OAAO,MAAM,CAAC,EAAE,KAAK;AAAA,cAC1C,KAAK,QAAQ,KAAK;AAAA,cAClB,WAAU;AAAA;AAAA,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIA;AAAA,UACA,mDAAC,QAAsB,IAAI,aAAa,QAAQ,KAAK,UACnD,6DAAC,QAAG,WAAU,0CACX,kBAAQ,KAAK,SADhB;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHS,QAAQ,IAAnB;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,mDAAC,SAAI,WAAU,QACb,6DAAC,QAAG,WAAU,8CAA6C,yBAA3D;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UAEA,mDAAC,SAAI,WAAU,qEACb;AAAA,+DAAC,SAAI,WAAU,QACb;AAAA,cAAC;AAAA;AAAA,gBACC,OAAM;AAAA,gBACN,SAAQ;AAAA,gBACR,UAAS;AAAA,gBACT,OAAM;AAAA,gBACN,QAAO;AAAA,gBAEP;AAAA;AAAA,oBAAC;AAAA;AAAA,sBACC,GAAE;AAAA,sBACF,MAAK;AAAA,sBACL,QAAO;AAAA;AAAA,oBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIC;AAAA,kBACD;AAAA,oBAAC;AAAA;AAAA,sBACC,GAAE;AAAA,sBACF,MAAK;AAAA,sBACL,QAAO;AAAA;AAAA,oBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIC;AAAA;AAAA;AAAA,cAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAiBA,KAlBF;AAAA;AAAA;AAAA;AAAA,mBAmBA;AAAA,YACA,mDAAC,YAAO,WAAU,+GAA8G,0BAAhI;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAvBF;AAAA;AAAA;AAAA;AAAA,iBAwBA;AAAA,aAzCF;AAAA;AAAA;AAAA;AAAA,eA0CA;AAAA;AAAA,MA7CK,QAAQ,KAAK;AAAA,MADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA+CA,CACD,KAlDH;AAAA;AAAA;AAAA;AAAA,WAmDA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,SAAS,MACP;AAAA,UAAc,CAAC,cACb,cAAc,IACV,SAAS,MAAM,SAAU,SAAS,MAAM,SAAS,IACjD;AAAA,QACN;AAAA,QAGF;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,MAAM;AAAA;AAAA,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAGA;AAAA;AAAA,MAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAcA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,SAAS,MACP;AAAA,UACE,CAAC,eAAe,YAAY,KAAK,SAAS,MAAM;AAAA,QAClD;AAAA,QAGF;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,MAAM;AAAA;AAAA,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAGA;AAAA;AAAA,MAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYA;AAAA,OAhFF;AAAA;AAAA;AAAA;AAAA,SAiFA,KAlFF;AAAA;AAAA;AAAA;AAAA,SAmFA;AAEJ;AAEA,IAAO,2BAAQ;;;ADFX,IAAAC,0BAAA;AA1FG,IAAM,OAAO,CAAC,EAAC,KAAI,MAAM;AAC9B,SAAO,CAAC,EAAC,OAAO,cAAc,KAAK,QAAQ,QAAO,CAAC;AACrD;AAmFe,SAAR,UAA2B;AAChC,QAAM,EAAC,SAAS,UAAU,eAAc,IAAI,cAAc;AAC1D,QAAM,EAAC,iBAAAC,iBAAe,IAAI;AAE1B,SACE,wFAGE;AAAA;AAAA,MAAC;AAAA;AAAA,QACC,iBAAiBA;AAAA,QACjB;AAAA,QACA;AAAA;AAAA,MAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA,IACC,kBAAkB,oDAAC,4BAAiB,UAAU,kBAA5B;AAAA;AAAA;AAAA;AAAA,WAA4C;AAAA,OARjE;AAAA;AAAA;AAAA;AAAA,SASA;AAEJ;AAEA,SAAS,aAAa,EAAC,OAAO,WAAW,gBAAgB,QAAO,GAAG;AACjE,QAAM,WAAW,CAAC;AAElB,UAAQ,OAAO,MAAM,QAAQ,CAAC,SAAS;AACrC,aAAS,KAAK,KAAK,KAAK,GAAG;AAAA,EAC7B,CAAC;AAID,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,QAAQ;AAG7C,MAAI,CAAC,OAAO;AACV,WAAO,oDAAC,SAAI,WAAU,MAAf;AAAA;AAAA;AAAA;AAAA,WAAkB;AAAA,EAC3B;AACA,SACE,wFACE,8DAAC,SAAI,WAAU,oFACb;AAAA,wDAAC,SAAI,WAAU,6EACZ,kBAAQ,OAAO,SACd,QAAQ,OAAO,MAAM,IAAI,CAAC,MAAM,UAC9B;AAAA,MAAC;AAAA;AAAA,QACC,KAAK,OAAO,KAAK;AAAA,QACjB,KAAI;AAAA,QACJ,WAAU;AAAA,QACV,SAAS,MAAM,eAAe,OAAO,KAAK,CAAC;AAAA;AAAA,MAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,CACD,KATL;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACC,KAAK;AAAA,QACL,KAAI;AAAA,QACJ,WAAU;AAAA;AAAA,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA,OAhBF;AAAA;AAAA;AAAA;AAAA,SAiBA,KAlBF;AAAA;AAAA;AAAA;AAAA,SAmBA;AAEJ;AAEA,SAAS,YAAY,EAAC,iBAAAA,kBAAiB,SAAS,SAAQ,GAAG;AACzD;AAAA,EA0CA;AAUA,QAAM,WAAW,CAAC;AAElB,UAAQ,OAAO,MAAM,QAAQ,CAAC,SAAS;AACrC,aAAS,KAAK,KAAK,KAAK,GAAG;AAAA,EAC7B,CAAC;AAID,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,QAAQ;AAE7C,QAAM,YAAY,QAAQ,WAAW,CAAC,EAAE;AAExC,QAAM,kBAAkB,QAAQ,WAAW,CAAC,EAAE;AAC9C,QAAM,aAAa,QAAQ,WAAW,CAAC,EAAE;AACzC,QAAM,cAAc,QAAQ,WAAW,CAAC,EAAE;AAC1C,QAAM,SAAS,QAAQ,WAAW,CAAC,EAAE;AAGrC,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAS,iBAAiB;AAE5D,QAAM,iBAAiB,CAAC,QAAQ;AAC9B,iBAAa,GAAG;AAAA,EAClB;AAEA,QAAM,CAAC,WAAW,cAAc,QAAI,wBAAS,OAAO,CAAC,CAAC;AAEtD,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,CAAC;AAGtC,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAS,IAAI;AAC7C,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAS,KAAK;AAEhD,SACE,wFAEE;AAAA,wDAAC,SAAI,WAAU,kCACb;AAAA,0DAAC,UAAK,oBAAN;AAAA;AAAA;AAAA;AAAA,aAAU;AAAA,MACV,oDAAC,SAAI,KAAI,aAAY,KAAI,QAAO,OAAO,IAAI,QAAQ,MAAnD;AAAA;AAAA;AAAA;AAAA,aAAuD;AAAA,MACvD,oDAAC,UAAK,WAAU,iBAAgB,4BAAhC;AAAA;AAAA;AAAA;AAAA,aAA4C;AAAA,SAH9C;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,oDAAC,SAAI,WAAU,uHACb;AAAA,0DAAC,SAAI,WAAU,6EAQb;AAAA,QAAC;AAAA;AAAA,UACC,OAAOA,kBAAiB;AAAA,UACxB;AAAA,UACA;AAAA,UACA;AAAA;AAAA,QAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,KAbF;AAAA;AAAA;AAAA;AAAA,aAcA;AAAA,MAEA,oDAAC,SAAI,WAAU,0BACb;AAAA,4DAAC,SAGC;AAAA,8DAAC,QAAG,WAAU,yCACX,kBAAQ,SADX;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,gBAAa,iBAAiBA,oBAA/B;AAAA;AAAA;AAAA;AAAA,iBAAgD;AAAA,aANlD;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,QACA,oDAAC,SACC;AAAA,UAAC;AAAA;AAAA,YACC,UACE;AAAA,cAAC;AAAA;AAAA,gBACC;AAAA,gBACA,iBAAiBA;AAAA,gBACjB,UAAU,CAAC;AAAA,gBACX;AAAA,gBACA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMA;AAAA,YAGF;AAAA,cAAC;AAAA;AAAA,gBACC,cAAa;AAAA,gBACb,SAAS;AAAA,gBAER,WAAC,SACA;AAAA,kBAAC;AAAA;AAAA,oBACC;AAAA,oBACA,iBAAiBA;AAAA,oBACjB,UAAU,KAAK,SAAS,SAAS,SAAS,CAAC;AAAA;AAAA,kBAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAWA;AAAA;AAAA,UAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAuBA,KAxBF;AAAA;AAAA;AAAA;AAAA,eAyBA;AAAA,QACA,oDAAC,QAAG,WAAU,aAAY,mCAA1B;AAAA;AAAA;AAAA;AAAA,eAA6C;AAAA,QAC7C,oDAAC,SAAI,WAAU,sDACb;AAAA,8DAAC,OAAE,WAAU,iBACV,kBAAQ,YAAY,OAAO,GAAG,GAAG,KADpC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACC,YACC,wFACE;AAAA,gEAAC,OAAE,WAAU,iBAAiB,kBAAQ,eAAtC;AAAA;AAAA;AAAA;AAAA,mBAAkD;AAAA,YAClD,oDAAC,SAAI,WAAU,gBACb;AAAA,kEAAC,YAAO,yBAAR;AAAA;AAAA;AAAA;AAAA,qBAAiB;AAAA,cACjB,oDAAC,QAAG,WAAU,2CACZ;AAAA,oEAAC,QAAG,mGAAJ;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,gBACA,oDAAC,QAAG,+EAAJ;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,gBACA,oDAAC,QAAG,mHAAJ;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,gBACA,oDAAC,QAAG,qHAAJ;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,gBACA,oDAAC,QAAG,+FAAJ;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,gBACA,oDAAC,QAAG,yFAAJ;AAAA;AAAA;AAAA;AAAA,uBAGA;AAAA,mBAxBF;AAAA;AAAA;AAAA;AAAA,qBAyBA;AAAA,cACA,oDAAC,QAAG,iDAAJ;AAAA;AAAA;AAAA;AAAA,qBAAqC;AAAA,cACrC,oDAAC,OAAE,smBAAH;AAAA;AAAA;AAAA;AAAA,qBAYA;AAAA,cACA,oDAAC,YAAO,yBAAR;AAAA;AAAA;AAAA;AAAA,qBAAiB;AAAA,cACjB,oDAAC,QAAG,WAAU,qBACZ;AAAA,oEAAC,QAAG,6BAAJ;AAAA;AAAA;AAAA;AAAA,uBAAiB;AAAA,gBACjB,oDAAC,QAAG,oCAAJ;AAAA;AAAA;AAAA;AAAA,uBAAwB;AAAA,gBACxB,oDAAC,QACC,8DAAC,UAAK,8BAAN;AAAA;AAAA;AAAA;AAAA,uBAAoB,KADtB;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBACA,oDAAC,QAAG,4BAAJ;AAAA;AAAA;AAAA;AAAA,uBAAgB;AAAA,gBAChB,oDAAC,QAAG,2BAAJ;AAAA;AAAA;AAAA;AAAA,uBAAe;AAAA,gBACf,oDAAC,QAAG,gCAAJ;AAAA;AAAA;AAAA;AAAA,uBAAoB;AAAA,gBACpB,oDAAC,QAAG,uCAAJ;AAAA;AAAA;AAAA;AAAA,uBAA2B;AAAA,mBAT7B;AAAA;AAAA;AAAA;AAAA,qBAUA;AAAA,iBArDF;AAAA;AAAA;AAAA;AAAA,mBAsDA;AAAA,eAxDF;AAAA;AAAA;AAAA;AAAA,iBAyDA;AAAA,UAED,WACC;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,SAAS,MAAM,YAAY,CAAC,QAAQ;AAAA,cACrC;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA,IAEA;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,SAAS,MAAM,YAAY,CAAC,QAAQ;AAAA,cACrC;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,aA7EJ;AAAA;AAAA;AAAA;AAAA,eA+EA;AAAA,QAEA,oDAAC,QAAG,WAAU,aAAY,+BAA1B;AAAA;AAAA;AAAA;AAAA,eAAyC;AAAA,QACzC,oDAAC,SAAI,WAAU,uDACb;AAAA,8DAAC,QAAG,WAAU,4CACZ;AAAA,gEAAC,QAAG,uEAAJ;AAAA;AAAA;AAAA;AAAA,mBAA2D;AAAA,YAC3D,oDAAC,QAAG,wEAAJ;AAAA;AAAA;AAAA;AAAA,mBAA4D;AAAA,YAC3D,aACC,wFACE;AAAA,kEAAC,QAAG,wEAAJ;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cACA,oDAAC,QAAG,wEAAJ;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,iBANF;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA,eAXJ;AAAA;AAAA;AAAA;AAAA,iBAaA;AAAA,UACC,YACC;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,SAAS,MAAM,aAAa,CAAC,SAAS;AAAA,cACvC;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA,IAEA;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,SAAS,MAAM,aAAa,CAAC,SAAS;AAAA,cACvC;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,aA5BJ;AAAA;AAAA;AAAA;AAAA,eA8BA;AAAA,WApJF;AAAA;AAAA;AAAA;AAAA,aAqJA;AAAA,MACA,oDAAC,SAAI,WAAU,wFACb;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,KAAI;AAAA,YACJ,OAAO;AAAA,YACP,QAAQ;AAAA,YACR,KAAI;AAAA;AAAA,UALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA;AAAA,QACA,oDAAC,UAAK,WAAU,0BAAyB,qBAAzC;AAAA;AAAA;AAAA;AAAA,eAA8C;AAAA,WARhD;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,SAhLF;AAAA;AAAA;AAAA;AAAA,WAiLA;AAAA,IACA,oDAAC,SAAI,WAAU,kCACb;AAAA,0DAAC,SACC;AAAA,4DAAC,QAAG,WAAU,2CAA0C;AAAA;AAAA,UACjC,QAAQ;AAAA,UAAM;AAAA,aADrC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACC,aACC;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YACV,yBAAyB,EAAC,QAAQ,UAAS;AAAA;AAAA,UAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAGA;AAAA,WARJ;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,MACA,oDAAC,SAAI,WAAU,0BACb;AAAA,4DAAC,QAAG,WAAU,8DAA6D,mCAA3E;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,SAAI,WAAU,8DACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,WAAW,uDACT,cAAc,oBAAoB,kBAAkB;AAAA,cAEtD,SAAS,MAAM,eAAe,iBAAiB;AAAA,cAC/C,OAAO,EAAC,QAAQ,oBAAmB;AAAA,cACpC;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,WAAW,iEACT,cAAc,eAAe,kBAAkB;AAAA,cAEjD,SAAS,MAAM,eAAe,YAAY;AAAA,cAC1C,OAAO,EAAC,QAAQ,oBAAmB;AAAA,cACpC;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,WAAW,iEACT,cAAc,gBAAgB,kBAAkB;AAAA,cAElD,SAAS,MAAM,eAAe,aAAa;AAAA,cAC3C,OAAO,EAAC,QAAQ,oBAAmB;AAAA,cACpC;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,WAAW,iEACT,cAAc,WAAW,kBAAkB;AAAA,cAE7C,SAAS,MAAM,eAAe,QAAQ;AAAA,cACtC,OAAO,EAAC,QAAQ,oBAAmB;AAAA,cACpC;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQA;AAAA,aApCF;AAAA;AAAA;AAAA;AAAA,eAqCA;AAAA,QACA,oDAAC,SAAI,WAAU,QACZ;AAAA,wBAAc,qBAAqB,mBAClC,oDAAC,SAAI,WAAU,mCACZ,6BACC;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,yBAAyB,EAAC,QAAQ,gBAAe;AAAA;AAAA,YAFnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGA,KALJ;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,UAED,cAAc,gBAAgB,cAC7B,oDAAC,SAAI,WAAU,mBACb;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cACV,yBAAyB,EAAC,QAAQ,WAAU;AAAA;AAAA,YAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGA,KAJF;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UAED,cAAc,iBAAiB,eAC9B,oDAAC,SAAI,WAAU,mBACb,8DAAC,SAAI,yBAAyB,EAAC,QAAQ,YAAW,KAAlD;AAAA;AAAA;AAAA;AAAA,iBAAqD,KADvD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAED,cAAc,YAAY,UACzB,oDAAC,SAAI,WAAU,mBACb,8DAAC,SAAI,yBAAyB,EAAC,QAAQ,OAAM,KAA7C;AAAA;AAAA;AAAA;AAAA,iBAAgD,KADlD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aA3BJ;AAAA;AAAA;AAAA;AAAA,eA6BA;AAAA,WAvEF;AAAA;AAAA;AAAA;AAAA,aAwEA;AAAA,SApFF;AAAA;AAAA;AAAA;AAAA,WAqFA;AAAA,OA9QF;AAAA;AAAA;AAAA;AAAA,SA+QA;AAEJ;AAIA,SAAS,aAAa,EAAC,iBAAAA,iBAAe,GAAG;AACvC,SACE,oDAAC,SAAI,WAAU,iCACZ;AAAA,IAAAA,kBAAiB,iBAChB,wFACE,8DAAC,SAAI,WAAU,uCACZ;AAAA,MAAAA,mBAAkB,oDAAC,SAAM,MAAMA,iBAAgB,SAA7B;AAAA;AAAA;AAAA;AAAA,aAAoC,IAAK;AAAA,MAC5D,oDAAC,OACC,8DAAC,SAAM,MAAMA,iBAAgB,kBAA7B;AAAA;AAAA;AAAA;AAAA,aAA6C,KAD/C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA,KANF;AAAA;AAAA;AAAA;AAAA,WAOA,IAEAA,kBAAiB,SACf,oDAAC,SAAM,WAAU,iBAAgB,MAAMA,kBAAiB,SAAxD;AAAA;AAAA;AAAA;AAAA,WAA+D;AAAA,IAGnE,oDAAC,SACC,8DAAC,UAAK,WAAU,wDAAuD,6BAAvE;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAnBF;AAAA;AAAA;AAAA;AAAA,SAoBA;AAEJ;AAEA,SAAS,YAAY;AAAA,EACnB;AAAA,EACA,iBAAAA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,SACE,oDAAC,SAAI,WAAU,gBACb;AAAA;AAAA,MAAC;AAAA;AAAA,QACC,QAAQ,QAAQ;AAAA,QAChB,SAAS,QAAQ;AAAA,QACjB;AAAA,QAEC,WAAC,EAAC,OAAM,MACP;AAAA,UAAC;AAAA;AAAA,YAEC;AAAA,YACA;AAAA,YACA;AAAA;AAAA,UAHK,OAAO;AAAA,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA;AAAA,MAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAaA;AAAA,IACA,oDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA,IAEJ;AAAA,MAAC;AAAA;AAAA,QACC,UAAU,CAACA,oBAAmB,CAACA,iBAAgB;AAAA,QAC/C,SAAS,MAAM;AACb,iBAAO,SAAS,OAAO,OAAO,SAAS,OAAO;AAAA,QAChD;AAAA,QACA,OACEA,mBACI;AAAA,UACE;AAAA,YACE,eAAeA,iBAAgB;AAAA,YAC/B,UAAU;AAAA,UACZ;AAAA,QACF,IACA,CAAC;AAAA,QAGN,UAAAA,kBAAiB,mBAAmB,gBAAgB;AAAA;AAAA,MAhBvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAiBA;AAAA,OAlCF;AAAA;AAAA;AAAA;AAAA,SAmCA;AAEJ;AAEA,SAAS,eAAe,EAAC,QAAQ,WAAW,eAAc,GAAG;AAC3D,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAS,KAAK;AACtC,QAAM,CAAC,aAAa,cAAc,QAAI,wBAAS,YAAY;AAE3D,SACE,wFACE;AAAA,wDAAC,SAAI,WAAU,mBACb;AAAA,0DAAC,QAAG,WAAU,iBAAiB,iBAAO,QAAtC;AAAA;AAAA;AAAA;AAAA,aAA2C;AAAA,MAC3C,oDAAC,SAAI,WAAU,qCACZ,iBAAO,OAAO,IAAI,CAAC,EAAC,OAAO,aAAa,UAAU,GAAE,MAAM;AACzD,eACE;AAAA,UAAC;AAAA;AAAA,YACC,WAAU;AAAA,YAEV,UAAS;AAAA,YACT,oBAAkB;AAAA,YAClB,SAAO;AAAA,YACP;AAAA,YACA,OAAO;AAAA,cACL,QAAQ,WACJ,oBACA;AAAA,cACJ,SAAS,cAAc,IAAI;AAAA,cAC3B,cAAc;AAAA,YAChB;AAAA,YACA,SAAS,MAAM;AACb,6BAAe,iBAAiB,MAAM,GAAG;AAAA,YAC3C;AAAA,YAEA,8DAAC,SAAI,yBAAyB,EAAC,QAAQ,MAAK,KAA5C;AAAA;AAAA;AAAA;AAAA,mBAA+C;AAAA;AAAA,UAhB1C,OAAO,OAAO;AAAA,UAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAmBA;AAAA,MAEJ,CAAC,KAxBH;AAAA;AAAA;AAAA;AAAA,aAyBA;AAAA,MACA,oDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAI;AAAA,SA5BgC,OAAO,MAA7C;AAAA;AAAA;AAAA;AAAA,WA6BA;AAAA,IACA,oDAAC,SAAI,WAAU,oCACb;AAAA,0DAAC,QAAG,WAAU,eAAc,kCAA5B;AAAA;AAAA;AAAA;AAAA,aAA8C;AAAA,MAC9C,oDAAC,QAAG,WAAU,4BACZ;AAAA,4DAAC,QAAG,uEAAJ;AAAA;AAAA;AAAA;AAAA,eAA2D;AAAA,QAC3D,oDAAC,QAAG,wEAAJ;AAAA;AAAA;AAAA;AAAA,eAA4D;AAAA,QAE3D,QACC,wFACE;AAAA,8DAAC,QAAG,uDAAJ;AAAA;AAAA;AAAA;AAAA,iBAA2C;AAAA,UAC3C,oDAAC,QAAG,wDAAJ;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,UAC5C,oDAAC,QAAG,wDAAJ;AAAA;AAAA;AAAA;AAAA,iBAA4C;AAAA,aAH9C;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,QAEF;AAAA,UAAC;AAAA;AAAA,YACC,SAAS,MAAM;AACb,sBAAQ,CAAC,IAAI,GACX;AAAA,gBACE,gBAAgB,eAAe,eAAe;AAAA,cAChD;AAAA,YACJ;AAAA,YACA,WAAU;AAAA,YAET;AAAA;AAAA,UATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUA;AAAA,WArBF;AAAA;AAAA;AAAA;AAAA,aAsBA;AAAA,SAxBF;AAAA;AAAA;AAAA;AAAA,WAyBA;AAAA,OAxDF;AAAA;AAAA;AAAA;AAAA,SAyDA;AAEJ;AAEA,SAAS,gBAAgB,EAAC,WAAW,UAAU,UAAU,OAAO,QAAO,GAAG;AACxE,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,CAAC;AACtC,QAAM,CAAC,EAAE,WAAW;AACpB,UAAQ,IAAI,MAAM,CAAC,EAAE,aAAa;AAClC,SACE,wFACE;AAAA;AAAA,MAAC;AAAA;AAAA,QACC,OAAM;AAAA,QACN,QAAQ,EAAC,MAAK;AAAA,QACd,QAAQ,GAAS,QAAQ;AAAA,QAExB,WAAC,YACA,wFACE;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,MAAK;AAAA,cACL,OAAO,KAAK,UAAU,SAAS;AAAA;AAAA,YAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIA;AAAA,UACA,oDAAC,SAAI,WAAU,wDACb;AAAA;AAAA,cAAC;AAAA;AAAA,gBACC,WAAU;AAAA,gBACV,OAAO,EAAC,QAAQ,kBAAkB,YAAY,QAAO;AAAA,gBAErD;AAAA;AAAA,oBAAC;AAAA;AAAA,sBACC,WAAU;AAAA,sBACV,SAAS,MAAM;AACb,4BAAI,UAAU,GAAG;AACf,oCAAU,CAAC,SAAS,OAAO,CAAC;AAAA,wBAC9B;AAAA,sBACF;AAAA,sBACD;AAAA;AAAA,oBAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASA;AAAA,kBACA,oDAAC,UAAK,WAAU,QAAQ,oBAAxB;AAAA;AAAA;AAAA;AAAA,yBAA+B;AAAA,kBAC/B;AAAA,oBAAC;AAAA;AAAA,sBACC,WAAU;AAAA,sBACV,SAAS,MAAM,UAAU,CAAC,SAAS,OAAO,CAAC;AAAA,sBAC5C;AAAA;AAAA,oBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAqBA;AAAA,YACA;AAAA,cAAC;AAAA;AAAA,gBACC,WAAU;AAAA,gBACV,MAAK;AAAA,gBACL;AAAA,gBACA,UAAU,YAAY,QAAQ,UAAU;AAAA,gBAEvC;AAAA;AAAA,cANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOA;AAAA,eA9BF;AAAA;AAAA;AAAA;AAAA,iBA+BA;AAAA,aArCF;AAAA;AAAA;AAAA;AAAA,eAsCA;AAAA;AAAA,MA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA8CA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,OAAO,EAAC,OAAO,QAAQ,cAAc,qBAAoB;AAAA;AAAA,MAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAGC;AAAA,IACD,oDAAC,SAAI,WAAU,QACb,8DAAC,SAAI,KAAI,kBAAiB,KAAI,WAA9B;AAAA;AAAA;AAAA;AAAA,WAAsC,KADxC;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACC,WAAU;AAAA,QACV,OAAO,EAAC,OAAO,QAAQ,cAAc,qBAAoB;AAAA;AAAA,MAF3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAGC;AAAA,OA1DH;AAAA;AAAA;AAAA;AAAA,SA2DA;AAEJ;AAsBA,IAAM,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsCjC,IAAM,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAsCrB;AAAA;AAGJ,IAAM,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWlB;AAAA;AAGJ,IAAM,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQ9B;AAAA;AAGJ,IAAM,iBAAiB;AAAA,IACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": ["import_react", "import_react", "import_jsx_dev_runtime", "selectedVariant"]
}
