{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).products.$handle.jsx", "../../../../app/components/ProductsCorousel.jsx"],
  "sourcesContent": ["import {Suspense} from 'react';\nimport {defer, redirect} from '@shopify/remix-oxygen';\nimport {Await, Link, useLoaderData} from '@remix-run/react';\nimport React, { useState } from 'react';\nimport ProductsCorousel from '~/components/ProductsCorousel';\n\nimport {\n  Image,\n  Money,\n  VariantSelector,\n  getSelectedProductOptions,\n  CartForm,\n} from '@shopify/hydrogen';\nimport {getVariantUrl} from '~/utils';\n\nexport const meta = ({data}) => {\n  return [{title: `Hydrogen | ${data.product.title}`}];\n};\n\nexport async function loader({params, request, context}) {\n  const {handle} = params;\n  const {storefront} = context;\n\n  const selectedOptions = getSelectedProductOptions(request).filter(\n    (option) =>\n      // Filter out Shopify predictive search query params\n      !option.name.startsWith('_sid') &&\n      !option.name.startsWith('_pos') &&\n      !option.name.startsWith('_psq') &&\n      !option.name.startsWith('_ss') &&\n      !option.name.startsWith('_v'),\n  );\n\n  if (!handle) {\n    throw new Error('Expected product handle to be defined');\n  }\n\n  // await the query for the critical product data\n  const {product} = await storefront.query(PRODUCT_QUERY, {\n    variables: {handle, selectedOptions},\n  });\n\n  const products = await storefront.query(PRODUCTS_QUERY);\n // console.log(products.products.edges); \n\n  const productsreturn = products.products;\n  //console.log(product.variants.nodes[0].image.url);\n  //console.log(product.variants.nodes[0]);\n\n  // In order to show which variants are available in the UI, we need to query\n  // all of them. But there might be a *lot*, so instead separate the variants\n  // into it's own separate query that is deferred. So there's a brief moment\n  // where variant options might show as available when they're not, but after\n  // this deffered query resolves, the UI will update.\n  const variants = storefront.query(VARIANTS_QUERY, {\n    variables: {handle},\n  });\n\n  if (!product?.id) {\n    throw new Response(null, {status: 404});\n  }\n\n  const firstVariant = product.variants.nodes[0];\n  const firstVariantIsDefault = Boolean(\n    firstVariant.selectedOptions.find(\n      (option) => option.name === 'Title' && option.value === 'Default Title',\n    ),\n  );\n\n  if (firstVariantIsDefault) {\n    product.selectedVariant = firstVariant;\n  } else {\n    // if no selected variant was returned from the selected options,\n    // we redirect to the first variant's url with it's selected options applied\n    if (!product.selectedVariant) {\n      return redirectToFirstVariant({product, request});\n    }\n  }\n  return defer({product, variants,productsreturn});\n}\n\nfunction redirectToFirstVariant({product, request}) {\n  const url = new URL(request.url);\n  const firstVariant = product.variants.nodes[0];\n\n  throw redirect(\n    getVariantUrl({\n      pathname: url.pathname,\n      handle: product.handle,\n      selectedOptions: firstVariant.selectedOptions,\n      searchParams: new URLSearchParams(url.search),\n    }),\n    {\n      status: 302,\n    },\n  );\n}\n\n//const [activeImg, setActiveImage] = useState(0)\n\nexport default function Product() {\n  const {product, variants, productsreturn} = useLoaderData();\n  const {selectedVariant} = product;\n  //console.log(productsreturn);\n  return (\n    <>\n    {/*<ProductVariantColrousel className=\"col-span-1 overflow-x-auto\" product={product}></ProductVariantColrousel>*/}\n      {/*<ProductImage image={selectedVariant?.image} />*/}\n      <ProductMain \n        selectedVariant={selectedVariant}\n        product={product}\n        variants={variants}\n      />\n      {productsreturn && \n    <ProductsCorousel products={productsreturn}/>}\n    </>\n  );\n}\n\nfunction ProductImage({image,activeImg, setActiveImage, product}) {\n  const ImageSrc = [];\n          \n          product.images.edges.forEach((item)=>{\n            ImageSrc.push(item.node.url)\n          })\n\n          //console.log(ImageSrc)\n\n\n          const [images, setImages] = useState(ImageSrc);\n  //const [activeImg, setActiveImage] = useState(images[0])\n // console.log(image)\n  if (!image) {\n    return <div className=\"\" />;\n  }\n  return (\n                    <>\n                    <img src={activeImg} alt=\"\" className='w-full h-full aspect-square object-cover rounded-xl'/>\n                    <div className='flex flex-row justify-between h-full overflow-y-auto'>\n                      {product.images.edges && product.images.edges.map((item,index)=>(\n                        <img src={images[index]} alt=\"\" className='w-24 h-24 rounded-md cursor-pointer' onClick={() => setActiveImage(images[index])}/>\n                      ))\n                      }\n                    </div>\n                    </>\n  );\n}\n\nfunction ProductMain({selectedVariant, product, variants}) {\n  {/*const {title, descriptionHtml} = product;\n  return (\n    <div className=\"col-span-5\">\n      <h1>{title}</h1>\n      <ProductPrice selectedVariant={selectedVariant} />\n      <div className='shadow-2xl bg-grey'>\n      AVAILABLE OFFERS!!\n      </div>\n      <br />\n      <Suspense\n        fallback={\n          <ProductForm\n            product={product}\n            selectedVariant={selectedVariant}\n            variants={[]}\n          />\n        }\n      >\n        <Await\n          errorElement=\"There was a problem loading product variants\"\n          resolve={variants}\n        >\n          {(data) => (\n            <ProductForm\n              product={product}\n              selectedVariant={selectedVariant}\n              variants={data.product?.variants.nodes || []}\n            />\n          )}\n        </Await>\n      </Suspense>\n      <br />\n      <br />\n      <p>\n        <strong>Description</strong>\n      </p>\n      <br />\n      <div dangerouslySetInnerHTML={{__html: descriptionHtml}} />\n      <br />\n    </div>\n          );*/}\n          \n        //console.log(product)\n\n            /*const [images, setImages] = useState({\n              img0 : \"https://static.nike.com/a/images/t_PDP_1280_v1/f_auto,b_rgb:f5f5f5/3396ee3c-08cc-4ada-baa9-655af12e3120/scarpa-da-running-su-strada-invincible-3-xk5gLh.png\",\n              img1 : \"https://static.nike.com/a/images/f_auto,b_rgb:f5f5f5,w_440/e44d151a-e27a-4f7b-8650-68bc2e8cd37e/scarpa-da-running-su-strada-invincible-3-xk5gLh.png\",\n              img2 : \"https://static.nike.com/a/images/f_auto,b_rgb:f5f5f5,w_440/44fc74b6-0553-4eef-a0cc-db4f815c9450/scarpa-da-running-su-strada-invincible-3-xk5gLh.png\",\n              img3 : \"https://static.nike.com/a/images/f_auto,b_rgb:f5f5f5,w_440/d3eb254d-0901-4158-956a-4610180545e5/scarpa-da-running-su-strada-invincible-3-xk5gLh.png\"\n          })*/\n          const ImageSrc = [];\n          \n          product.images.edges.forEach((item)=>{\n            ImageSrc.push(item.node.url)\n          })\n\n          //console.log(ImageSrc)\n\n\n          const [images, setImages] = useState(ImageSrc);\n\n           const expaction = product.metafields[0].value;\n           //console.log(expaction)\n            const key_ingredients = product.metafields[1].value;\n            const How_To_use = product.metafields[2].value;\n            const who_can_use = product.metafields[3].value;\n            const why_us = product.metafields[4].value;\n            //console.log(why_us);\n            \n            \n          \n            const [activeTab, setActiveTab] = useState('Key Ingredients');\n\n            const handleTabClick = (tab) => {\n              setActiveTab(tab);\n            };\n\n        const [activeImg, setActiveImage] = useState(images[0])\n    \n        const [amount, setAmount] = useState(1);\n        //<img src={images[0]} alt=\"\" className='w-24 h-24 rounded-md cursor-pointer' onClick={() => setActiveImage(images[0])}/>\n        //<img src={images[1]} alt=\"\" className='w-24 h-24 rounded-md cursor-pointer' onClick={() => setActiveImage(images[1])}/>\n    \n        return (\n            <>\n            {/*<ProductImage image={selectedVariant?.image} />*/}\n            <div className='flex flex-col justify-between lg:flex-row gap-16 lg:items-center'>\n                <div className='flex flex-col gap-6 lg:w-2/4'>\n                    {/*<img src={activeImg} alt=\"\" className='w-full h-full aspect-square object-cover rounded-xl'/>\n                    <div className='flex flex-row justify-between h-full overflow-y-auto'>\n                      {product.images.edges && product.images.edges.map((item,index)=>(\n                        <img src={images[index]} alt=\"\" className='w-24 h-24 rounded-md cursor-pointer' onClick={() => setActiveImage(images[index])}/>\n                      ))\n                      }\n                    </div>*/}\n                    <ProductImage image={selectedVariant?.image} product={product} activeImg={activeImg} setActiveImage={setActiveImage}/>\n                </div>\n                {/* ABOUT */}\n                <div className='flex flex-col lg:w-2/4'>\n                    <div>\n                    {/*<!--h6 className='text-2xl font-semibold'></h6 -->*/}\n                        {/*<span className=' text-violet-600 font-semibold'>Special Sneaker</span>*/}\n                        <h1 className='text-3xl font-bold'>{product.title}</h1>\n                        <ProductPrice selectedVariant={selectedVariant} />\n                    </div>\n                    <div>\n                    <Suspense\n        fallback={\n          <ProductForm\n            product={product}\n            selectedVariant={selectedVariant}\n            variants={[]}\n            activeImg={activeImg}\n            setActiveImage={setActiveImage}\n          />\n        }\n      >\n        <Await\n          errorElement=\"There was a problem loading product variants\"\n          resolve={variants}\n        >\n          {(data) => (\n            <ProductForm\n              product={product}\n              selectedVariant={selectedVariant}\n              variants={data.product?.variants.nodes || []}\n            />\n          )}\n        </Await>\n      </Suspense>\n                    </div>\n                    <h2>Product Description</h2>\n                    <p className='text-gray-700'>\n                    {product.description}\n                    </p>\n                </div>\n            </div>\n            <div>\n              <h2>What to Expect from {product.title} ?</h2>\n            {expaction && (<div dangerouslySetInnerHTML={{ __html: expaction }} />)}\n            </div>\n            <div className=\"container mx-auto mt-5\">\n      <h1 className=\"text-3xl font-semibold mb-4\">Product Information</h1>\n      <div className=\"flex space-x-4 overflow-y-auto\">\n        <div\n          className={`cursor-pointer py-2 lg:px-8 px-4 border-b-4 whitespace-nowrap ${\n            activeTab === 'Key Ingredients' ? 'border-blue-500' : ''\n          }`}\n          onClick={() => handleTabClick('Key Ingredients')}\n        >\n          Key Ingredients\n        </div>\n        <div\n          className={`cursor-pointer py-2 lg:px-8 px-4 border-b-4 whitespace-nowrap ${\n            activeTab === 'How to Use' ? 'border-blue-500' : ''\n          }`}\n          onClick={() => handleTabClick('How to Use')}\n        >\n          How to Use\n        </div>\n        <div\n          className={`cursor-pointer py-2 lg:px-8 px-4 border-b-4 whitespace-nowrap ${\n            activeTab === 'Who Can Use' ? 'border-blue-500' : ''\n          }`}\n          onClick={() => handleTabClick('Who Can Use')}\n        >\n          Who Can Use\n        </div>\n        <div\n          className={`cursor-pointer py-2 lg:px-8 px-4 border-b-4 whitespace-nowrap ${\n            activeTab === 'Why us' ? 'border-blue-500' : ''\n          }`}\n          onClick={() => handleTabClick('Why us')}\n        >\n          Why us\n        </div>\n      </div>\n      <div className=\"mt-4\">\n        {activeTab === 'Key Ingredients' && key_ingredients &&(\n          <div className='overflow-y-auto overflow-x-auto'>\n            {key_ingredients && (<div dangerouslySetInnerHTML={{ __html: key_ingredients }} />)}\n          </div>\n        )}\n        {activeTab === 'How to Use' && How_To_use && (\n          <div className='overflow-y-auto'>\n            <div dangerouslySetInnerHTML={{ __html: How_To_use }} />\n          </div>\n        )}\n        {activeTab === 'Who Can Use' && who_can_use && (\n          <div className='overflow-y-auto'>\n            <div dangerouslySetInnerHTML={{ __html:who_can_use  }} />\n          </div>\n        )}\n        {activeTab === 'Why us' && why_us && (\n          <div className='overflow-y-auto'>\n            <div dangerouslySetInnerHTML={{ __html:why_us  }} />\n          </div>\n        )}\n      </div>\n    </div>\n            </>\n        );\n\n}\n\n//{\"type\":\"root\",\"children\":[{\"type\":\"paragraph\",\"children\":[{\"type\":\"text\",\"value\":\"Onion, in combination with coconut, reduces hair fall and promotes growth of lost hair.\"}]}]}\n\nfunction ProductPrice({selectedVariant}) {\n  return (\n    <div className=\"product-price\">\n      {selectedVariant?.compareAtPrice ? (\n        <>\n          <div className=\"product-price-on-sale\">\n            {selectedVariant ? <Money data={selectedVariant.price} /> : null}\n            <s>\n              <Money data={selectedVariant.compareAtPrice} />\n            </s>\n          </div>\n        </>\n      ) : (\n        selectedVariant?.price && <Money data={selectedVariant?.price} />\n      )}\n      </div>\n  );\n}\n\nfunction ProductForm({product, selectedVariant, variants,activeImg, setActiveImage}) {\n  return (\n    <div className=\"product-form\">\n      <VariantSelector\n        handle={product.handle}\n        options={product.options}\n        variants={variants}\n      >\n        {({option}) => <ProductOptions key={option.name} option={option} activeImg={activeImg} setActiveImage={setActiveImage}/>}\n      </VariantSelector>\n      <br />\n\n      <AddToCartButton\n        disabled={!selectedVariant || !selectedVariant.availableForSale}\n        onClick={() => {\n          window.location.href = window.location.href + '#cart-aside';\n        }}\n        lines={\n          selectedVariant\n            ? [\n                {\n                  merchandiseId: selectedVariant.id,\n                  quantity: 1,\n                },\n              ]\n            : []\n        }\n      >\n        {selectedVariant?.availableForSale ? 'ADD TO CART' : 'Sold out'}\n      </AddToCartButton>\n    </div>\n  );\n}\n\nfunction ProductOptions({option,activeImg,setActiveImage}) {\n  return (\n    <div className=\"product-options\" key={option.name}>\n      <h5>{option.name}</h5>\n      <div className=\"product-options-grid\">\n        {option.values.map(({value, isAvailable, isActive, to}) => {\n          return (\n            <Link\n              className=\"product-options-item\"\n              key={option.name + value}\n              prefetch=\"intent\"\n              preventScrollReset\n              replace\n              to={to}\n              style={{\n                border: isActive ? '1px solid black' : '1px solid transparent',\n                opacity: isAvailable ? 1 : 0.3,\n              }}\n              onClick={()=>{setActiveImage(selectedVariant?.image.url)}}\n            >\n              <div dangerouslySetInnerHTML={{ __html:value  }} />\n            </Link>\n          );\n        })}\n      </div>\n      <br />\n    </div>\n  );\n}\n\nfunction AddToCartButton({analytics, children, disabled, lines, onClick}) {\n  const [amount, setAmount] = useState(1);\n  lines[0].quantity=amount;\n  console.log(lines[0].merchandiseId);\n  return (\n    <CartForm route=\"/cart\" inputs={{lines}} action={CartForm.ACTIONS.LinesAdd}>\n      {(fetcher) => (\n        <>\n          <input\n            name=\"analytics\"\n            type=\"hidden\"\n            value={JSON.stringify(analytics)}\n          />\n          <div className='flex flex-row items-center gap-12'>\n          <div className='flex flex-row items-center'>\n                            <button className='bg-gray-200 py-2 px-5 rounded-lg text-violet-800 text-3xl' onClick={() => {if(amount!=0){setAmount((prev) => prev - 1)}}}>-</button>\n                            <span className='py-4 px-6 rounded-lg'>{amount}</span>\n                    <button className='bg-gray-200 py-2 px-4 rounded-lg text-violet-800 text-3xl' onClick={() => setAmount((prev) => prev + 1)}>+</button>\n                        </div>\n          <button className=\"w-full h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 px-1 rounded-lg\"\n            type=\"submit\"\n            onClick={onClick}\n            disabled={disabled ?? fetcher.state !== 'idle'}\n          >\n            {children}\n          </button>\n          </div>\n        </>\n      )}\n    </CartForm>\n  );\n}\n\nfunction ProductVariantColrousel(product){\n  return(\n<div>\n      <ul className=\"space-y-2\">\n        <li><a href=\"#\" className=\"text-blue-500 hover:underline\">\n         {/* {product.product.images.edges.map((url)=>(\n            <img src={url.node.url} ></img>\n          ))}*/}\n          {/*console.log(product.product.images)*/}\n          {product.product.variants.nodes.map((url)=>(\n            <img src={url.image.url} ></img>\n          ))}\n          </a></li>\n      </ul>\n    </div>\n  );\n\n}\n//variants.nodes[0].image.url\nconst PRODUCT_VARIANT_FRAGMENT = `#graphql\n  fragment ProductVariant on ProductVariant {\n    availableForSale\n    compareAtPrice {\n      amount\n      currencyCode\n    }\n    id\n    image {\n      __typename\n      id\n      url\n      altText\n      width\n      height\n    }\n    price {\n      amount\n      currencyCode\n    }\n    product {\n      title\n      handle\n    }\n    quantityAvailable\n    selectedOptions {\n      name\n      value\n    }\n    sku\n    title\n    unitPrice {\n      amount\n      currencyCode\n    }\n  }\n`;\n\nconst PRODUCT_FRAGMENT = `#graphql\n  fragment Product on Product {\n    id\n    title\n    vendor\n    handle\n    descriptionHtml\n    description\n    tags\n    productType\n    metafields(identifiers: [{namespace: \"custom\", key: \"what_to_expect\"},{namespace: \"custom\", key: \"key_ingredients\"}, {namespace: \"custom\", key: \"how_to_use1\"},{namespace: \"custom\", key: \"who_can_use\"},{namespace: \"custom\", key: \"why_we\"} ]){\n      key\n      value\n    }\n    images(first:10){\n      edges{\n        node{\n          url\n        }\n      }\n    }\n    options {\n      name\n      values\n    }\n    selectedVariant: variantBySelectedOptions(selectedOptions: $selectedOptions) {\n      ...ProductVariant\n    }\n    variants(first: 10) {\n      nodes {\n        ...ProductVariant\n      }\n    }\n    seo {\n      description\n      title\n    }\n  }\n  ${PRODUCT_VARIANT_FRAGMENT}\n`;\n\nconst PRODUCT_QUERY = `#graphql\n  query Product(\n    $country: CountryCode\n    $handle: String!\n    $language: LanguageCode\n    $selectedOptions: [SelectedOptionInput!]!\n  ) @inContext(country: $country, language: $language) {\n    product(handle: $handle) {\n      ...Product\n    }\n  }\n  ${PRODUCT_FRAGMENT}\n`;\n\nconst PRODUCT_VARIANTS_FRAGMENT = `#graphql\n  fragment ProductVariants on Product {\n    variants(first: 50) {\n      nodes {\n        ...ProductVariant\n      }\n    }\n  }\n  ${PRODUCT_VARIANT_FRAGMENT}\n`;\n\nconst VARIANTS_QUERY = `#graphql\n  ${PRODUCT_VARIANTS_FRAGMENT}\n  query ProductVariants(\n    $country: CountryCode\n    $language: LanguageCode\n    $handle: String!\n  ) @inContext(country: $country, language: $language) {\n    product(handle: $handle) {\n      ...ProductVariants\n    }\n  }\n`;\n\nconst PRODUCTS_QUERY = `#graphql\n  query {\n  products(first: 250, query:\"tags:* Under 100 OR Under 1000\"){\n    edges{\n      node{\n        id\n        title\n        handle\n        tags\n        images(first:1){\n          edges{\n            node{\n              url\n              id\n            }\n          }\n        }\n        featuredImage {\n          id\n        }\n      }\n    }\n}\n  }\n`;\n/*\nfunction JsonToHtml({ json }) {\n  const renderChildren = (children) => {\n    return children.map((child, index) => {\n      if (child.type === 'paragraph') {\n        // If the type is 'paragraph', create a <p> element\n        return <p key={index}>{child.children[0].value}</p>;\n      } else if (child.type === 'list') {\n        // Handle list elements as needed (e.g., ul, ol)\n        // You can add logic to create list elements here\n        return null;\n      } else {\n        // Handle other types or unknown types\n        return null;\n      }\n    });\n  };\n\n  return (\n    <div>\n      {renderChildren(json.children)}\n    </div>\n  );\n};\n*/\n", "// src/ProductCarousel.js\r\nimport React, { useState } from 'react';\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\r\nimport {Await, useLoaderData, Link} from '@remix-run/react';\r\nimport { useMediaQuery } from 'react-responsive';\r\n//import products from './products';\r\n\r\n\r\nconst ProductsCorousel = ({products}) => {\r\n  /*const products = [\r\n    { id: 1, name: 'Product 1', image: 'https://cdn.shopify.com/s/files/1/0810/9863/7603/files/6995513d5b84551a7c89579bda02b56d.jpg?v=1693061468' },\r\n    { id: 2, name: 'Product 2', image: 'https://cdn.shopify.com/s/files/1/0810/9863/7603/files/6995513d5b84551a7c89579bda02b56d.jpg?v=1693061468' },\r\n    { id: 3, name: 'Product 3', image: 'https://cdn.shopify.com/s/files/1/0810/9863/7603/files/6995513d5b84551a7c89579bda02b56d.jpg?v=1693061468' },\r\n    { id: 4, name: 'Product 3', image: 'https://cdn.shopify.com/s/files/1/0810/9863/7603/files/6995513d5b84551a7c89579bda02b56d.jpg?v=1693061468' },\r\n    { id: 5, name: 'Product 3', image: 'https://cdn.shopify.com/s/files/1/0810/9863/7603/files/6995513d5b84551a7c89579bda02b56d.jpg?v=1693061468' },\r\n    { id: 6, name: 'Product 3', image: 'https://cdn.shopify.com/s/files/1/0810/9863/7603/files/purepng.com-white-t-shirtt-shirtfabrict-shapegramnetsmenswhite-14215264292423zp8k_2677b2d8-59f3-4e10-9cb8-b26178515ac5.png?v=1693692132' },\r\n    { id: 7, name: 'Product 3', image: 'https://cdn.shopify.com/s/files/1/0810/9863/7603/files/purepng.com-white-t-shirtt-shirtfabrict-shapegramnetsmenswhite-14215264292423zp8k_2677b2d8-59f3-4e10-9cb8-b26178515ac5.png?v=1693692132' },\r\n    // Add more products as needed\r\n  ];*/\r\n\r\n  //const products = products.edges;\r\n  //console.log(\"products \" + products)\r\n\r\n  let productsToShow =[]\r\n  \r\n  const [startIndex, setStartIndex] = useState(0);\r\n  //const [endIndex, setEndIndex]  = useState();\r\n\r\n  const isLargeScreen = useMediaQuery({ minWidth: 1024 });\r\n  const endIndex = isLargeScreen ? 4 : 2;\r\n  \r\n  if(products != null || products != undefined ){\r\n\r\n    //console.log(products.edges[0].node)\r\n    productsToShow = products.edges.slice(startIndex, startIndex + endIndex);\r\n    //console.log(productsToShow);\r\n  }\r\n//  const isMobile = useMediaQuery({ maxWidth: 640 });\r\n//  const isTablet = useMediaQuery({ minWidth: 641, maxWidth: 1024 });\r\n  \r\n\r\n\r\n  // products.slice(startIndex, startIndex + 3);\r\n\r\n  //const nextProducts = () => {\r\n  //  setStartIndex((prevIndex) => (prevIndex + 2) % products.length);\r\n  //};\r\n\r\n  //const prevProducts = () => {\r\n   // setStartIndex((prevIndex) =>\r\n    //  prevIndex === 0\r\n     //   ? products.length - (products.length % 2)\r\n     //   : prevIndex - 2\r\n    //);\r\n  //};\r\n\r\n  return (\r\n    <div className=\"w-full max-w-screen-xl mx-auto lg:px-24 sm:px-4 md:px-6\">\r\n      <div className=\"relative\">\r\n        <div className=\"flex\">\r\n          {productsToShow.map((product) => (\r\n            \r\n            <div key={product.node.id} className=\"w-full sm:w-1/3 md:w-1/3 lg:px-4 sm:px-1 md:px-3\">\r\n              <div className=\"bg-white rounded-lg shadow-lg p-2\" style={{ boxShadow: '0px 4px 8px rgba(255, 217, 90, 0.5)' }}>\r\n                <img\r\n                  src={`${product.node.images.edges[0].node.url}`} // Make sure to put your images in the 'public/images/' directory\r\n                  alt={product.node.title}\r\n                  className=\"w-full h-auto\"\r\n                />\r\n                <Link\r\n            key={product.id}\r\n            to={`/products/${product.node.handle}`}\r\n          ><h2 className=\"text-lg font-semibold mt-2 text-center\">{product.node.title}</h2></Link>\r\n          <div className='h-12'><h1 className='text-center font-bold h-full w-full'>255</h1></div>\r\n                {/* Add more product information here */}\r\n                <div className=\"px-1 py-1 flex justify-between items-center flex-col sm:flex-row\">\r\n                <div className=\"mr-3\" ><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 33\" xmlSpace=\"preserve\" width=\"2.8em\" height=\"2.8em\" ><path d=\"M9 .5h14c4.7 0 8.5 3.8 8.5 8.5v14c0 4.7-3.8 8.5-8.5 8.5H9C4.3 31.5.5 27.7.5 23V9C.5 4.3 4.3.5 9 .5z\" fill=\"rgb(255, 255, 255)\" stroke=\"rgb(0, 0, 0)\" ></path><path d=\"M22.3 11.8c.4.4.7.9.9 1.4.2.5.3 1.1.3 1.6 0 .6-.1 1.1-.3 1.6-.2.5-.5 1-.9 1.4l-5.6 5.6s-.1 0-.1.1h-.2s-.1 0-.1-.1l-5.6-5.6C10 17 9.5 16 9.5 14.9c0-1.1.3-2.1 1-2.9.7-.8 1.7-1.3 2.7-1.5 1.1-.1 2.1.2 3 .8l.3.2.3-.2c.8-.6 1.8-.9 2.8-.8 1.1.1 2 .5 2.7 1.3z\" fill=\"none\" stroke=\"rgb(0, 0, 0)\"></path></svg></div>\r\n    <button className=\"w-full h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 px-1 rounded-lg\">\r\n      ADD TO CART\r\n    </button>\r\n  </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button\r\n          className=\"absolute left-0 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-50 rounded-full p-2 ml-4 hover:bg-opacity-75\"\r\n          onClick={()=>           \r\n            setStartIndex((prevIndex) =>\r\n            prevIndex === 0\r\n            ? products.edges.length - (products.edges.length % 2)\r\n            : prevIndex) }\r\n\r\n        >\r\n        <MdChevronLeft className='opacity-50 cursor-pointer hover:opacity-100'  size={40} />\r\n        </button>\r\n        <button\r\n          className=\"absolute right-0 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-50 rounded-full p-2 mr-4 hover:bg-opacity-75\"\r\n          onClick={()=>setStartIndex((prevIndex) => (prevIndex + 1) % products.edges.length)}\r\n        >\r\n         <MdChevronRight className='opacity-50 cursor-pointer hover:opacity-100'  size={40}/>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ProductsCorousel;\r\n\r\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_jsx_dev_runtime", "selectedVariant"]
}
