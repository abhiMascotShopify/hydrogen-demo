{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).products.$handle.jsx"],
  "sourcesContent": ["import {useRef,Suspense} from 'react';\nimport {defer, redirect} from '@shopify/remix-oxygen';\nimport {Await, Link, useLoaderData} from '@remix-run/react';\nimport React, {useState} from 'react';\nimport ProductsCorousel from '~/components/ProductsCorousel';\nimport ProductCarousel from '~/components/ProductCarousel';\nimport {\n  Image,\n  Money,\n  VariantSelector,\n  getSelectedProductOptions,\n  CartForm,\n} from '@shopify/hydrogen';\nimport {getVariantUrl} from '~/utils';\nimport {\n\tOKENDO_PRODUCT_REVIEWS_FRAGMENT,\n\tOKENDO_PRODUCT_STAR_RATING_FRAGMENT,\n\tOkendoReviews,\n\tOkendoStarRating,\n  // WithOkendoReviewsSnippet,\n\t// WithOkendoStarRatingSnippet\n} from \"@okendo/shopify-hydrogen\";\n//import {getWishlistSocialCount} from '../swym/store-apis';\n\nexport const meta = ({data}) => {\n  return [{title: `Hydrogen | ${data.product.title}`}];\n};\n\nexport async function loader({params, request, context}) {\n  const {handle} = params;\n  const {storefront} = context;\n \n  const selectedOptions = getSelectedProductOptions(request).filter(\n    (option) =>\n      // Filter out Shopify predictive search query params\n      !option.name.startsWith('_sid') &&\n      !option.name.startsWith('_pos') &&\n      !option.name.startsWith('_psq') &&\n      !option.name.startsWith('_ss') &&\n      !option.name.startsWith('_v'),\n  );\n\n  if (!handle) {\n    throw new Error('Expected product handle to be defined');\n  }\n  \n  const {product} = await storefront.query(PRODUCT_QUERY, {\n    variables: {handle, selectedOptions},\n  });\n\n  const products = await storefront.query(PRODUCTS_QUERY);\n  const productsreturn = products.products;\n\n  // In order to show which variants are available in the UI, we need to query\n  // all of them. But there might be a *lot*, so instead separate the variants\n  // into it's own separate query that is deferred. So there's a brief moment\n  // where variant options might show as available when they're not, but after\n  // this deffered query resolves, the UI will update.\n  const variants = storefront.query(VARIANTS_QUERY, {\n    variables: {handle},\n  });\n\n  if (!product?.id) {\n    throw new Response(null, {status: 404});\n  }\n\n  const firstVariant = product.variants.nodes[0];\n  const firstVariantIsDefault = Boolean(\n    firstVariant.selectedOptions.find(\n      (option) => option.name === 'Title' && option.value === 'Default Title',\n    ),\n  );\n\n  if (firstVariantIsDefault) {\n    product.selectedVariant = firstVariant;\n  } else {\n    // if no selected variant was returned from the selected options,\n    // we redirect to the first variant's url with it's selected options applied\n    if (!product.selectedVariant) {\n      return redirectToFirstVariant({product, request});\n    }\n  }\n  \n  const {collections} = await storefront.query(FEATURED_COLLECTION_QUERY);\n  //console.log(collections.nodes[0].products);\n  const recommendedProducts = collections;\n  //console.log(\"Recommended Products::\",recommendedProducts)\n  return defer({product, variants, productsreturn ,recommendedProducts});\n}\n\nfunction redirectToFirstVariant({product, request}) {\n  const url = new URL(request.url);\n  const firstVariant = product.variants.nodes[0];\n\n  throw redirect(\n    getVariantUrl({\n      pathname: url.pathname,\n      handle: product.handle,\n      selectedOptions: firstVariant.selectedOptions,\n      searchParams: new URLSearchParams(url.search),\n    }),\n    {\n      status: 302,\n    },\n  );\n}\n\n//const [activeImg, setActiveImage] = useState(0)\n\nexport default function Product() {\n  const {product, variants, productsreturn,recommendedProducts} = useLoaderData();\n  const {selectedVariant} = product;\n  const [socialCount, setSocialCount] = useState();\n\n  async function setWishlistSocialCount(skipCache){\n    // try {\n    //     const productGQLId = product.product.id;\n    //     const productId = productGQLId.split(\"/\")[4];\n    //     const res = await getWishlistSocialCount({empi: productId}, skipCache);\n    //     if(res?.data?.count){\n    //       setSocialCount(res.data.count);\n    //     }else{\n    //       setSocialCount(0);\n    //     }\n    //   } catch (error) {\n    //     console.log(error);\n    //     setSocialCount(0);\n    //   }\n  }\n  //console.log(\"product:: ::\",product);\n  return (\n    <>\n      {/*<ProductVariantColrousel className=\"col-span-1 overflow-x-auto\" product={product}></ProductVariantColrousel>*/}\n      {/*<ProductImage image={selectedVariant?.image} />*/}\n      <ProductMain\n        selectedVariant={selectedVariant}\n        setWishlistSocialCount={setWishlistSocialCount}\n        product={product}\n        variants={variants}\n        recommendedProducts={recommendedProducts}\n      />\n      {productsreturn && <ProductsCorousel products={productsreturn} />}\n    </>\n  );\n}\n\nfunction ProductImage({image, activeImg, setActiveImage, product}) {\n  const ImageSrc = [];\n\n  product.images.edges.forEach((item) => {\n    ImageSrc.push(item.node.url);\n  });\n\n  //console.log(ImageSrc)\n\n  const [images, setImages] = useState(ImageSrc);\n  //const [activeImg, setActiveImage] = useState(images[0])\n  // console.log(image)\n  if (!image) {\n    return <div className=\"\" />;\n  }\n  return (\n    <>\n      <div className=\"lg:grid flex flex-col-reverse lg:grid-cols-[20%_80%] gap-2 lg:gap-0 items-center\">\n        <div className=\"flex  lg:flex-col  justify-between lg:h-[325px] overflow-x-auto gap-[5px]\">\n          {product.images.edges &&\n            product.images.edges.map((item, index) => (\n              <img\n                src={images[index]}\n                alt=\"\"\n                className=\"w-24 h-24 rounded-md cursor-pointer product-image-caro \"\n                onClick={() => setActiveImage(images[index])}\n              />\n            ))}\n        </div>\n        <img\n          src={activeImg}\n          alt=\"\"\n          className=\"w-[90%] border border-[#e5e5e5] h-full aspect-square object-cover rounded-xl p-[10px] border-1 border-[#e5e5e5] hover:scale-x-125 md:hover:scale-125 transition duration-300 cursor-pointer mst-card\"\n        />\n      </div>\n    </>\n  );\n}\n\nfunction ProductMain({selectedVariant, product, setWishlistSocialCount, variants,recommendedProducts}) {\n  const ImageSrc = [];\n  product.images.edges.forEach((item) => {\n    ImageSrc.push(item.node.url);\n  });\n  const [images, setImages] = useState(ImageSrc);\n  const expaction = product.metafields[0]?.value;\n  const key_ingredients = product.metafields[1]?.value;\n  const How_To_use = product.metafields[2]?.value;\n  const who_can_use = product.metafields[3]?.value;\n  const why_us = product.metafields[4]?.value;\n  const ingredient = product.metafields[5]?.value;\n  const [activeTab, setActiveTab] = useState('Ingredient');\n  const handleTabClick = (tab) => {\n    setActiveTab(tab);\n  };\n  const [activeImg, setActiveImage] = useState(images[0]);\n  const [moreText, setMoreText] = useState(true);\n  const [moreOffer, setMoreOffer] = useState(false);\n\n  const [more, setMore] = useState(false);\n  const [moreContent, setMoreContent] = useState('+View More');\n\n  return (\n    <>\n      {/*<ProductImage image={selectedVariant?.image} />*/}\n      <div className=\"flex m-[2%] gap-2 items-center\">\n        <Link className='mst-color' to=\"/\">Home</Link>\n        <img src=\"/next.png\" alt=\"next\" width={20} height={20} />\n        <span className=\"font-semibold mst-color\">Product page</span>\n      </div>\n      <div className=\"final-product mst-card-shadow shadow-lg p-4 flex flex-col justify-between lg:flex-row lg:gap-8 lg:ml-8 lg:mr-8 items-start relative\">\n        <div className=\"flex flex-col gap-6 lg:w-2/4 flex-wrap items-center lg:sticky top-[240px]\">\n          {/*<img src={activeImg} alt=\"\" className='w-full h-full aspect-square object-cover rounded-xl'/>\n            <div className='flex flex-row justify-between h-full overflow-y-auto'>\n              {product.images.edges && product.images.edges.map((item,index)=>(\n                <img src={images[index]} alt=\"\" className='w-24 h-24 rounded-md cursor-pointer' onClick={() => setActiveImage(images[index])}/>\n              ))\n              }\n            </div>*/}\n          <ProductImage\n            image={selectedVariant?.image}\n            product={product}\n            activeImg={activeImg}\n            setActiveImage={setActiveImage}\n          />\n        </div>\n        {/* ABOUT */}\n        <div className=\"flex flex-col lg:w-3/4\">\n          <div>\n            <h1 className=\"text-2xl font-semibold mt-0 mb-0\">\n              {product.title}\n            </h1>\n            <div className='flex py-2'>\n            <OkendoStarRating\n              productId={product.id}\n              okendoStarRatingSnippet={product.okendoStarRatingSnippet}\n            />\n            </div>\n            <ProductPrice selectedVariant={selectedVariant} />\n          </div>\n          <div>\n            <Suspense\n              fallback={\n                <ProductForm\n                  product={product}\n                  selectedVariant={selectedVariant}\n                  variants={[]}\n                  activeImg={activeImg}\n                  setActiveImage={setActiveImage}\n                />\n              }\n            >\n              <Await\n                errorElement=\"There was a problem loading product variants\"\n                resolve={variants}\n              >\n                {(data) => (\n                  <ProductForm\n                    product={product}\n                    selectedVariant={selectedVariant}\n                    activeImg={activeImg}\n                    setActiveImage={setActiveImage}\n                    variants={data.product?.variants.nodes || []}\n                  />\n                )}\n              </Await>\n            </Suspense>\n          </div>\n          <div className='grid grid-cols-4 gap-4 p-4 border-dotted mt-4'>\n            <img src=\"https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Vegetarian.jpg?v=1712825726\"/>  \n            <img src=\"https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Cruelty-Free.jpg?v=1712825726\"/>  \n            <img src=\"https://cdn.shopify.com/s/files/1/0809/4253/0882/files/High_Quality.jpg?v=1712825727\"/>  \n            <img src=\"https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Suitable_for_all_Skin_Types.jpg?v=1712825726\"/>     \n          </div>\n          <h2 className=\"mt-[10px]\">Product Description</h2>\n          <div className=\"shadow-p relative p-4 sm:p-0\">\n            <p className=\"text-gray-700\">\n              {product.description.substr(0, 200)}\n            </p>\n            {moreText && (\n              <>\n                <div\n                className=\"expect\"\n                dangerouslySetInnerHTML={{__html: product.description}}\n              />\n              </>\n            )}\n          </div>\n          <div className='flex'>\n          <OkendoReviews\n            productId={product.id}\n            okendoReviewsSnippet={product.okendoReviewsSnippet}\n          />\n          </div>\n        </div>\n        <div className=\"absolute cursor-pointer flex flex-col items-center top-[-36px] lg:top-[15px] right-2\">\n          <img\n            className=\"sharelogo mst-color\"\n            src=\"/share.png\"\n            width={24}\n            height={24}\n            alt=\"share\"\n          />\n          <span className=\"text-sm font-semibold \">Share</span>\n        </div>\n      </div>\n      <div className=\"max-w-[1320px] p-[10px] m-auto\">\n        <div>\n          <h2 className=\"text-center lg:text-2xl mt-[4%] mb-[2%] uppercase\">\n            Key Features{/* What to Expect from {product.title} ? */}\n          </h2>\n          {expaction && (\n            <div\n              className=\"expect\"\n              dangerouslySetInnerHTML={{__html: expaction}}\n            />\n          )}\n        </div>\n        <div className=\"container mx-auto mt-5 p-5\">\n          <h1 className=\"lg:text-3xl font-semibold mb-4 text-center mt-[4%] mb-[2%] uppercase\">\n            Product Information\n          </h1>\n          <div className=\"flex space-x-4 overflow-y-auto lg:justify-center my-[20px]\">\n          <div\n              className={`cursor-pointer py-2 lg:px-8 px-4 border-b-4 uppercase whitespace-nowrap ${\n                activeTab === 'Ingredient' ? 'border-active' : ''\n              }`}\n              onClick={() => handleTabClick('Ingredient')}\n              style={{border: '1px solid #e5e5e5'}}\n            >\n             Ingredients\n            </div>\n            <div\n              className={`cursor-pointer py-2 lg:px-8 px-4 border-b-4 uppercase whitespace-nowrap ${\n                activeTab === 'How to Use' ? 'border-active' : ''\n              }`}\n              onClick={() => handleTabClick('How to Use')}\n              \n            >\n              How to Use\n            </div>\n            <div\n              className={`cursor-pointer py-2 lg:px-8 px-4 border-b-4 uppercase whitespace-nowrap ${\n                activeTab === 'Concerns' ? 'border-active' : ''\n              }`}\n              onClick={() => handleTabClick('Concerns')}\n              style={{border: '1px solid #e5e5e5'}}\n            >\n             Concerns\n            </div>\n            <div\n              className={`cursor-pointer py-2 lg:px-8 px-4 border-b-4 uppercase whitespace-nowrap ${\n                activeTab === 'Why us' ? 'border-active' : ''\n              }`}\n              onClick={() => handleTabClick('Why us')}\n              style={{border: '1px solid #e5e5e5'}}\n            >\n              Why us\n            </div>\n          </div>\n          <div className=\"mt-4\">\n            {activeTab === 'Key Ingredients' && key_ingredients && (\n              <div className=\"overflow-y-auto overflow-x-auto\">\n                {key_ingredients && (\n                  <div\n                    className=\"expect\"\n                    dangerouslySetInnerHTML={{__html: key_ingredients}}\n                  />\n                )}\n              </div>\n            )}\n            {activeTab === 'How to Use' && How_To_use && (\n              <div className=\"overflow-y-auto\">\n                <div\n                  className=\"key-ing\"\n                  dangerouslySetInnerHTML={{__html: How_To_use}}\n                />\n              </div>\n            )}\n            {activeTab === 'Concerns' && who_can_use && (\n              <div className=\"overflow-y-auto\">\n                <div dangerouslySetInnerHTML={{__html: who_can_use}} />\n              </div>\n            )}\n            {activeTab === 'Ingredient' && ingredient && (\n              <div className=\"overflow-y-auto\">\n                <div style={{maxWidth:\"100%\"}} dangerouslySetInnerHTML={{__html: ingredient}} />\n              </div>\n            )}\n            {activeTab === 'Why us' && why_us && (\n              <div className=\"overflow-y-auto\">\n                <div dangerouslySetInnerHTML={{__html: why_us}} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className='recommended_products'>\n      <RecommendedProducts\n        key={recommendedProducts.nodes[0].id}\n        products={recommendedProducts.nodes[0].products}\n        title=\"Recommended Products\"\n      />\n      </div>\n    </>\n  );\n}\n\n//{\"type\":\"root\",\"children\":[{\"type\":\"paragraph\",\"children\":[{\"type\":\"text\",\"value\":\"Onion, in combination with coconut, reduces hair fall and promotes growth of lost hair.\"}]}]}\n\nfunction ProductPrice({selectedVariant}) {\n  return (\n    <div className=\"product-price flex gap-[10px] mb-2\">\n      {selectedVariant?.compareAtPrice ? (\n        <>\n          <div className=\"product-price-on-sale font-semibold\">\n            {selectedVariant ? <Money data={selectedVariant.price} /> : null}\n            <s>\n              <Money data={selectedVariant.compareAtPrice} />\n            </s>\n          </div>\n        </>\n      ) : (\n        selectedVariant?.price && (\n          <Money className=\"font-semibold\" data={selectedVariant?.price} />\n        )\n      )}\n      <div>\n        <span className=\"font-semibold bg-[#e1eecc] py-1 px-2 text-sm rounded\">\n          FREE SHIPPING\n        </span>\n      </div>\n    </div>\n  );\n}\n\nfunction ProductForm({\n  product,\n  selectedVariant,\n  variants,\n  activeImg,\n  setActiveImage,\n  setWishlistSocialCount\n}) {\n  const [pincode, setPinCode] = useState(\"\"); \n  const [serviceble, setServiceble] = useState({status:null, msg:''})\n  //const [estimatedDelivery,setEstimatedDelivery] = useState(\"\")\n  const handlePinChange =(e)=> {\n    setPinCode(e.target.value)\n  }\n\n  const getEstimatedDate = (edd)=>{\n    const date = new Date();\n    date.setDate(date.getDate()  + edd);\n    const estimatedDateDelivery = new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    }).format(new Date(date));\n    return estimatedDateDelivery;\n    //setEstimatedDelivery(estimatedDateDelivery)\n  }\n  \n  const checkAvailibility = ()=>{\n      // Get Token Valid to 24 hours;\n    fetch(\"https://appapi.shipdelight.com/generate-token?api_key=65eaba0ac23f74c2d7346965\",{method:\"POST\"}).then((res) => res.json()).then((result)=>{\n      const { success,data } = result;\n      if(success){\n        const headers = {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${data.access_token}`\n        }\n        const params = {\n          \"pickup_pincode\": 400009,\n          \"delivery_pincode\": parseInt(pincode),\n          \"pay_type\": \"PPD\",\n          \"service_type\": \"F\",\n          \"courier_service_type\": \"sdd\"\n        }  \n        fetch(\"https://appapi.shipdelight.com/serviceability_tat\",{method:\"POST\",headers:headers, body:JSON.stringify(params) }).then((res)=> res.json()).then((result)=>{\n          const { data, errors } = result;\n          if(errors?.length){\n            setServiceble({status:false,msg:'Invalid Pincode'});\n          }else{\n            const isServicebale = data?.response.delivery_pincode_serviceable;\n            var estimateDate = getEstimatedDate(data?.response.edd);\n            const msg = data?.response.delivery_pincode_serviceable ? estimateDate : 'Service is not available at this location';\n            setServiceble({status:isServicebale,msg:msg});\n          }\n          setTimeout(()=>{\n            setServiceble({status:null,msg:''});\n          },3500)\n        })\n      }\n    })\n  \n  }\n \n  console.log(\"serviceble::\",serviceble)\n  const closeRef = useRef(null);\n  return (\n    <div className=\"product-form\">\n      <VariantSelector\n        handle={product.handle}\n        options={product.options}\n        variants={variants}\n      >\n        {({option}) => (\n          <ProductOptions\n            key={option.name}\n            option={option}\n            activeImg={activeImg}\n            closeRef={closeRef}\n            selectedVariant={selectedVariant}\n            setActiveImage={setActiveImage}\n            setWishlistSocialCount={setWishlistSocialCount}\n          />\n        )}\n      </VariantSelector>\n      <Offers />\n      <br />\n      {/* <WishlistButton\n        selectedVariant={selectedVariant}\n        productData={product}\n        setWishlistSocialCount={setWishlistSocialCount}\n      /> */}\n      <div className=\"mb-2\">\n        <p> Check Availibility / Estimated Delivery </p>\n        <div className=\"flex items-baseline\">\n        <input className=\"w-48 sm:w-[320px] block rounded-bl-lg rounded-tl-lg border bg-transparent bg-clip-padding  text-base font-normal leading-[1.6] text-neutral-700 outline-none transition duration-200 ease-in-out focus:z-[3]  focus:text-neutral-700 focus:outline-none dark:border-neutral-600 dark:text-neutral-200 dark:placeholder:text-neutral-200 mst-card\" value={pincode} onChange={handlePinChange} type=\"text\" placeholder=\"Enter your pincode\" /> \n        <button onClick={()=> checkAvailibility() } className=\"w-[130px] sm:w-[150px] m-4 h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 px-4 rounded-lg\"> Check Now </button>\n        </div>\n        { serviceble.status!= null &&\n        <p className={`font-bold ${serviceble.status ? 'text-green-500' : 'text-orange-500'}` }> { serviceble.msg } </p>\n        \n        }\n        </div>\n      <AddToCartButton\n        disabled={!selectedVariant || !selectedVariant.availableForSale}\n        onClick={() => {\n          window.location.href = window.location.href + '#cart-aside';\n        }}\n        lines={\n          selectedVariant\n            ? [\n                {\n                  merchandiseId: selectedVariant.id,\n                  quantity: 1,\n                },\n              ]\n            : []\n        }\n      >\n        {selectedVariant?.availableForSale ? 'ADD TO CART' : 'Sold out'}\n      </AddToCartButton>\n    </div>\n  );\n}\n\nfunction ProductOptions({option, activeImg, setWishlistSocialCount,closeRef}) {\n  var opt_length = option.values.length;\n  //console.log(\"selectedVariant ::\",closeRef);\n\n  return (\n    <>\n      <div className=\"product-options\" key={option.name}>\n        <h5 className=\"font-semibold\">{option.name}</h5>\n        <div className=\"product-options-grid items-center\">\n          {option.values.map(({value, isAvailable, isActive, to}) => {\n            return (\n              <Link\n                ref={closeRef}\n                className=\"product-options-item\"\n                key={option.name + value}\n                prefetch=\"intent\"\n                preventScrollReset\n                replace\n                to={to}\n                style={{\n                  border: isActive\n                    ? '1px solid black'\n                    : '1px solid transparent',\n                  opacity: isAvailable ? 1 : 0.3,\n                  borderRadius: '5px',\n                }}\n                onClick={() => {\n                  if (!closeRef?.current) return;\n                  closeRef.current.click();\n                }}\n              >\n              <div dangerouslySetInnerHTML={{__html: value}} />\n              </Link>\n            );\n          })}\n        </div>\n        <br />\n      </div>\n    </>\n  );\n}\n\nconst Offers = ()=>{\n  return(\n    <div className=\"py-[10px]\">\n      <div className='bg-[#f7f7f7]'>\n      <h2 className=\"text-[16px]\">AVAILABLE OFFERS!!</h2>\n      <ul className=\"text-[#757575] list-disc\">\n        <li>FREE Mivi Play Bluetooth Speakers on a spend of Rs.2199</li>\n        <li>Holographic Pouch + Liquid Lipstick on a spend of Rs.599</li>\n      </ul>\n      </div>\n  </div>\n  )\n}\n\nfunction AddToCartButton({analytics, children, disabled, lines, onClick}) {\n  const [amount, setAmount] = useState(1);\n  lines[0].quantity = amount;\n  //console.log(\"AddToCartButton variant_id::\",lines);\n  return (\n    <>\n      <CartForm\n        route=\"/cart\"\n        inputs={{lines}}\n        action={CartForm.ACTIONS.LinesAdd}\n      >\n        {(fetcher) => (\n          <>\n            <input\n              name=\"analytics\"\n              type=\"hidden\"\n              value={JSON.stringify(analytics)}\n            />\n            <div className=\"flex flex-row items-center gap-4 mobile-cart-product\">\n              <div\n                className=\"flex flex-row items-center py-[6px] px-[8px] rounded-xl\"\n                style={{border: '1px solid #000', background: 'white'}}\n              >\n                <button\n                  className=\" text-xl\"\n                  onClick={() => {\n                    if (amount != 0) {\n                      setAmount((prev) => prev - 1);\n                    }\n                  }}\n                >\n                  -\n                </button>\n                <span className=\"px-4\">{amount}</span>\n                <button\n                  className=\" text-xl\"\n                  onClick={() => setAmount((prev) => prev + 1)}\n                >\n                  +\n                </button>\n              </div>\n              <button\n                className=\"w-[150px] h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 px-4 rounded-lg\"\n                type=\"submit\"\n                onClick={onClick}\n                disabled={disabled ?? fetcher.state !== 'idle'}\n              >\n                {children}\n              </button>\n            </div>\n          </>\n        )}\n      </CartForm>\n      {/* <p\n        className=\"lg:mt-6\"\n        style={{width: '100%', borderBottom: '1px dashed #bdbdbd'}}\n      ></p> */}\n      {/* <div className=\"mt-2\">\n        <img src=\"/BrandBand.svg\" alt=\"brand\" />\n      </div>\n      <p\n        className=\"mt-2\"\n        style={{width: '100%', borderBottom: '1px dashed #bdbdbd'}}\n      ></p> */}\n    </>\n  );\n}\n\nfunction ProductVariantColrousel(product) {\n  return (\n    <div>\n      <ul className=\"space-y-2\">\n        <li>\n          <a href=\"#\" className=\"text-blue-500 hover:underline\">\n            {/* {product.product.images.edges.map((url)=>(\n            <img src={url.node.url} ></img>\n          ))}*/}\n            {/*console.log(product.product.images)*/}\n            {product.product.variants.nodes.map((url) => (\n              <img src={url.image.url}></img>\n            ))}\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n}\nfunction RecommendedProducts({products, title}) {\n  return (\n    <>\n      <h1 className=\"text-center font-semibold my-[15px]\">{title} </h1>\n      <div>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Await resolve={products}>\n            {/*<ShopifyCarousel products={products}></ShopifyCarousel>*/}\n            {<ProductsCorousel products={products}></ProductsCorousel>}\n          </Await>\n        </Suspense>\n        <br />\n      </div>\n    </>\n  );\n}\n//variants.nodes[0].image.url\nconst PRODUCT_VARIANT_FRAGMENT = `#graphql\n  fragment ProductVariant on ProductVariant {\n    availableForSale\n    compareAtPrice {\n      amount\n      currencyCode\n    }\n    id\n    image {\n      __typename\n      id\n      url\n      altText\n      width\n      height\n    }\n    price {\n      amount\n      currencyCode\n    }\n    product {\n      title\n      handle\n    }\n    quantityAvailable\n    selectedOptions {\n      name\n      value\n    }\n    sku\n    title\n    unitPrice {\n      amount\n      currencyCode\n    }\n  }\n`;\n\nconst PRODUCT_FRAGMENT = `#graphql\n  ${OKENDO_PRODUCT_STAR_RATING_FRAGMENT}\n  ${OKENDO_PRODUCT_REVIEWS_FRAGMENT}\n  fragment Product on Product {\n    id\n    title\n    vendor\n    handle\n    descriptionHtml\n    description\n    tags\n    productType\n    metafields(identifiers: [{namespace: \"custom\", key: \"what_to_expect\"},{namespace: \"custom\", key: \"key_ingredients\"}, {namespace: \"custom\", key: \"how_to_use1\"},{namespace: \"custom\", key: \"who_can_use\"},{namespace: \"custom\", key: \"why_we\"},{namespace: \"custom\", key: \"key_ingredients\"} ]){\n      key\n      value\n    }\n    images(first:10){\n      edges{\n        node{\n          url\n        }\n      }\n    }\n    options {\n      name\n      values\n    }\n    selectedVariant: variantBySelectedOptions(selectedOptions: $selectedOptions) {\n      ...ProductVariant\n    }\n    variants(first: 10) {\n      nodes {\n        ...ProductVariant\n      }\n    }\n    seo {\n      description\n      title\n    }\n    ...OkendoStarRatingSnippet\n\t\t...OkendoReviewsSnippet\n  }\n  ${PRODUCT_VARIANT_FRAGMENT}\n`;\n\nconst PRODUCT_QUERY = `#graphql\n  query Product(\n    $country: CountryCode\n    $handle: String!\n    $language: LanguageCode\n    $selectedOptions: [SelectedOptionInput!]!\n  ) @inContext(country: $country, language: $language) {\n    product(handle: $handle) {\n      ...Product\n    }\n  }\n  ${PRODUCT_FRAGMENT}\n`;\n\nconst PRODUCT_VARIANTS_FRAGMENT = `#graphql\n  fragment ProductVariants on Product {\n    variants(first: 50) {\n      nodes {\n        ...ProductVariant\n      }\n    }\n  }\n  ${PRODUCT_VARIANT_FRAGMENT}\n`;\n\nconst VARIANTS_QUERY = `#graphql\n  ${PRODUCT_VARIANTS_FRAGMENT}\n  query ProductVariants(\n    $country: CountryCode\n    $language: LanguageCode\n    $handle: String!\n  ) @inContext(country: $country, language: $language) {\n    product(handle: $handle) {\n      ...ProductVariants\n    }\n  }\n`;\n\nconst PRODUCTS_QUERY = `#graphql\n  query {\n  products(first: 250, query:\"tags:* Under 100 OR Under 1000\"){\n    edges{\n      node{\n        id\n        title\n        handle\n        tags\n        images(first:1){\n          edges{\n            node{\n              url\n              id\n            }\n          }\n        }\n        featuredImage {\n          id\n        }\n      }\n    }\n}\n  }\n`;\n\nconst FEATURED_COLLECTION_QUERY = `#graphql\n  fragment FeaturedCollection on Collection {\n    products(first:100){\n      edges{\n        node{\n          id\n          title\n          handle\n          priceRange {\n            minVariantPrice {\n              amount\n              currencyCode\n            }\n          }\n          variants(first: 100) {\n          edges {\n          node {\n                availableForSale\n                id\n                metafields(identifiers: [{namespace: \"custom\", key: \"isdefault\"} ]){\n                    key\n                    value\n                  }\n                }\n              }\n        }\n        images(first:1){\n          edges{\n            node{\n              url\n            }\n          }\n        }\n        }\n      }\n    }\n    id\n    title\n    metafields(identifiers: [{namespace: \"custom\", key: \"from_customer_inbox\"}, {namespace: \"custom\", key: \"1_custom_colllection\"}]){\n      id\n      key\n      namespace\n      value\n    }\n    image {\n      id\n      url\n      altText\n      width\n      height\n    }\n    handle\n  }\n  query FeaturedCollection($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    collections(first: 100) {\n      nodes {\n        ...FeaturedCollection\n      }\n    }\n  }\n`\nconst RECOMMENDED_PRODUCTS_QUERY = `#graphql\n  fragment RecommendedProduct on Product {\n    id\n    title\n    handle\n    priceRange {\n      minVariantPrice {\n        amount\n        currencyCode\n      }\n    }\n    metafields(identifiers: [{namespace: \"custom\", key: \"customized\"}, {namespace: \"custom\", key: \"reviewed_products\"}]){\n      key\n      value\n    }\n    variants(first: 100) {\n      edges {\n        node {\n          id\n          availableForSale\n          metafields(identifiers: [{namespace: \"custom\", key: \"isdefault\"} ]){\n              key\n              value\n            }\n          # Add other variant fields you need\n        }\n      }\n    }\n    priceRange {\n      minVariantPrice {\n        amount\n        currencyCode\n      }\n    }\n    images(first: 10) {\n      nodes {\n        id\n        url\n        altText\n        width\n        height\n      }\n    }\n  }\n  query RecommendedProducts ($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    products(first: 10, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...RecommendedProduct\n      }\n    }\n  }\n`;\n/*\nfunction JsonToHtml({ json }) {\n  const renderChildren = (children) => {\n    return children.map((child, index) => {\n      if (child.type === 'paragraph') {\n        // If the type is 'paragraph', create a <p> element\n        return <p key={index}>{child.children[0].value}</p>;\n      } else if (child.type === 'list') {\n        // Handle list elements as needed (e.g., ul, ol)\n        // You can add logic to create list elements here\n        return null;\n      } else {\n        // Handle other types or unknown types\n        return null;\n      }\n    });\n  };\n\n  return (\n    <div>\n      {renderChildren(json.children)}\n    </div>\n  );\n};\n*/\n"],
  "mappings": "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",
  "names": ["import_react", "result", "data"]
}
