{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account_.login.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport {Form, Link, useActionData} from '@remix-run/react';\nimport {\n  Card,\n  Input,\n  Checkbox,\n  Typography,\n} from \"@material-tailwind/react\"; \n\nexport const meta = () => {\n  return [{title: 'Login'}];\n};\n\nexport async function loader({context}) {\n  if (await context.session.get('customerAccessToken')) {\n\n    return redirect('/account');\n  }\n  return json({});\n}\n\nexport async function action({request, context}) {\n  const {session, storefront} = context;\n\n  if (request.method !== 'POST') {\n    return json({error: 'Method not allowed'}, {status: 405});\n  }\n\n  try {\n    const form = await request.formData();\n    const email = String(form.has('email') ? form.get('email') : '');\n    const password = String(form.has('password') ? form.get('password') : '');\n    const validInputs = Boolean(email && password);\n\n    if (!validInputs) {\n      throw new Error('Please provide both an email and a password.');\n    }\n\n    const {customerAccessTokenCreate} = await storefront.mutate(\n      LOGIN_MUTATION,\n      {\n        variables: {\n          input: {email, password},\n        },\n      },\n    );\n\n    if (!customerAccessTokenCreate?.customerAccessToken?.accessToken) {\n      throw new Error(customerAccessTokenCreate?.customerUserErrors[0].message);\n    }\n\n    const {customerAccessToken} = customerAccessTokenCreate;\n    console.log(customerAccessToken)\n    session.set('customerAccessToken', customerAccessToken);\n\n    return redirect('/account', {\n      headers: {\n        'Set-Cookie': await session.commit(),\n      },\n    });\n  } catch (error) {\n    if (error instanceof Error) {\n      return json({error: error.message}, {status: 400});\n    }\n    return json({error}, {status: 400});\n  }\n}\n\nexport default function Login() {\n  const data = useActionData();\n  const error = data?.error || null;\n\n  return (\n    <>\n    {/*\n    <div className=\"login\">\n      <h1>Sign in.</h1>\n      <Form method=\"POST\">\n        <fieldset>\n          <label htmlFor=\"email\">Email address  New</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            required\n            placeholder=\"Email address\"\n            aria-label=\"Email address\"\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autoFocus\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            placeholder=\"Password\"\n            aria-label=\"Password\"\n            minLength={8}\n            required\n          />\n        </fieldset>\n        {error ? (\n          <p>\n            <mark>\n              <small>{error}</small>\n            </mark>\n          </p>\n        ) : (\n          <br />\n        )}\n        <button type=\"submit\">Sign in</button>\n      </Form>\n      <br />\n      <div>\n        <p>\n          <Link to=\"/account/recover\">Forgot password \u2192</Link>\n        </p>\n        <p>\n          <Link to=\"/account/register\">Register \u2192</Link>\n        </p>\n      </div>\n        </div>*/}\n<div className=\"flex flex-col-reverse sm:flex-row\">\n<div className=\"sm:w-1/2 hidden sm:block\">\n        {/* Add your image here */}\n        <img\n          src=\"https://media.sugarpop.com/upload/LoginSideImg.png\"\n          alt=\"Login Background\"\n          className=\"w-full h-full object-cover\"\n        />\n      </div>\n      {/* Left Side - Form */}\n      <div className=\"sm:w-1/2 p-4\">\n        <Card color=\"transparent\" shadow={false}>\n          <Typography variant=\"h4\" color=\"blue-gray\">\n            Sign In\n          </Typography>\n          <Typography color=\"gray\" className=\"mt-1 font-normal\">\n            Enter your login details.\n          </Typography>\n          <form className=\"mt-8 mb-2 w-full max-w-screen-lg sm:w-96\">\n            {/* Form Fields */}\n            <div className=\"mb-4 flex flex-col gap-6\">\n              <Input size=\"lg\" label=\"Email\" />\n              <Input type=\"password\" size=\"lg\" label=\"Password\" />\n            </div>\n            <Checkbox\n              label={\n                <Typography\n                  variant=\"small\"\n                  color=\"gray\"\n                  className=\"flex items-center font-normal\"\n                >\n                  Remember me\n                </Typography>\n              }\n              containerProps={{ className: \"-ml-2.5\" }}\n            />\n            <button className=\"bg-primary text-white  px-6 py-2 rounded-full\">\n      Get Started\n    </button>\n          </form>\n        </Card>\n      </div>\n\n      {/* Right Side - Picture */}\n      \n    </div>\n    </>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/mutations/customeraccesstokencreate\nconst LOGIN_MUTATION = `#graphql\n  mutation login($input: CustomerAccessTokenCreateInput!) {\n    customerAccessTokenCreate(input: $input) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n      customerAccessToken {\n        accessToken\n        expiresAt\n      }\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;AAEA,IAAAA,gBAKO;AAkEH;AAhEG,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC,EAAC,OAAO,QAAO,CAAC;AAC1B;AAyDe,SAAR,QAAyB;AAC9B,QAAM,OAAO,cAAc;AAC3B,QAAM,QAAQ,MAAM,SAAS;AAE7B,SACE,sFAmDJ,6DAAC,SAAI,WAAU,qCACf;AAAA,uDAAC,SAAI,WAAU,4BAEP;AAAA,MAAC;AAAA;AAAA,QACC,KAAI;AAAA,QACJ,KAAI;AAAA,QACJ,WAAU;AAAA;AAAA,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIA,KANR;AAAA;AAAA;AAAA;AAAA,WAOM;AAAA,IAEA,mDAAC,SAAI,WAAU,gBACb,6DAAC,sBAAK,OAAM,eAAc,QAAQ,OAChC;AAAA,yDAAC,4BAAW,SAAQ,MAAK,OAAM,aAAY,uBAA3C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,4BAAW,OAAM,QAAO,WAAU,oBAAmB,yCAAtD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,UAAK,WAAU,4CAEd;AAAA,2DAAC,SAAI,WAAU,4BACb;AAAA,6DAAC,uBAAM,MAAK,MAAK,OAAM,WAAvB;AAAA;AAAA;AAAA;AAAA,iBAA+B;AAAA,UAC/B,mDAAC,uBAAM,MAAK,YAAW,MAAK,MAAK,OAAM,cAAvC;AAAA;AAAA;AAAA;AAAA,iBAAkD;AAAA,aAFpD;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QACA;AAAA,UAAC;AAAA;AAAA,YACC,OACE;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,OAAM;AAAA,gBACN,WAAU;AAAA,gBACX;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMA;AAAA,YAEF,gBAAgB,EAAE,WAAW,UAAU;AAAA;AAAA,UAVzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWA;AAAA,QACA,mDAAC,YAAO,WAAU,iDAAgD,2BAAlE;AAAA;AAAA;AAAA;AAAA,eAER;AAAA,WApBM;AAAA;AAAA;AAAA;AAAA,aAqBA;AAAA,SA5BF;AAAA;AAAA;AAAA;AAAA,WA6BA,KA9BF;AAAA;AAAA;AAAA;AAAA,WA+BA;AAAA,OAzCN;AAAA;AAAA;AAAA;AAAA,SA6CI,KAhGA;AAAA;AAAA;AAAA;AAAA,SAiGA;AAEJ;",
  "names": ["import_react"]
}
