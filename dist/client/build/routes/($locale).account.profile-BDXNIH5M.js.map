{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account.profile.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport React, { useState } from 'react';\nimport {\n  Form,\n  useActionData,\n  useNavigation,\n  useOutletContext,\n} from '@remix-run/react';\n\nexport const meta = () => {\n  return [{title: 'Profile'}];\n};\n\nexport async function loader({context}) {\n  const customerAccessToken = await context.session.get('customerAccessToken');\n  if (!customerAccessToken) {\n    return redirect('/account/login');\n  }\n  return json({});\n}\n\nexport async function action({request, context}) {\n  const {session, storefront} = context;\n\n  if (request.method !== 'PUT') {\n    return json({error: 'Method not allowed'}, {status: 405});\n  }\n\n  const form = await request.formData();\n  const customerAccessToken = await session.get('customerAccessToken');\n  if (!customerAccessToken) {\n    return json({error: 'Unauthorized'}, {status: 401});\n  }\n\n  try {\n    const password = getPassword(form);\n    const customer = {};\n    const validInputKeys = [\n      'firstName',\n      'lastName',\n      'email',\n      'password',\n      'phone',\n    ];\n    for (const [key, value] of form.entries()) {\n      if (!validInputKeys.includes(key)) {\n        continue;\n      }\n      if (key === 'acceptsMarketing') {\n        customer.acceptsMarketing = value === 'on';\n      }\n      if (typeof value === 'string' && value.length) {\n        customer[key] = value;\n      }\n    }\n\n    if (password) {\n      customer.password = password;\n    }\n\n    // update customer and possibly password\n    const updated = await storefront.mutate(CUSTOMER_UPDATE_MUTATION, {\n      variables: {\n        customerAccessToken: customerAccessToken.accessToken,\n        customer,\n      },\n    });\n\n    // check for mutation errors\n    if (updated.customerUpdate?.customerUserErrors?.length) {\n      return json(\n        {error: updated.customerUpdate?.customerUserErrors[0]},\n        {status: 400},\n      );\n    }\n\n    // update session with the updated access token\n    if (updated.customerUpdate?.customerAccessToken?.accessToken) {\n      session.set(\n        'customerAccessToken',\n        updated.customerUpdate?.customerAccessToken,\n      );\n    }\n\n    return json(\n      {error: null, customer: updated.customerUpdate?.customer},\n      {\n        headers: {\n          'Set-Cookie': await session.commit(),\n        },\n      },\n    );\n  } catch (error) {\n    return json({error: error.message, customer: null}, {status: 400});\n  }\n}\n\nexport default function AccountProfile() {\n  const account = useOutletContext();\n  const {state} = useNavigation();\n  const action = useActionData();\n  const customer = action?.customer ?? account?.customer;\n  const [activeTab, setActiveTab] = useState('profile');\n\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // You can handle the form submission here.\n    // Combine profileData and passwordData as needed.\n\n    console.log('Profile Data:', profileData);\n    console.log('Password Data:', passwordData);\n  };\n\n  return (\n    <>\n    <div className=\"w-full h-full justify-center items-center\">\n      <Form className=\"w-full justify-center items-center\" method=\"PUT\">\n      <fieldset>\n        <div className=\"mb-3\" >\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"firstName\">First name</label>\n          <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"firstName\"\n            name=\"firstName\"\n            type=\"text\"\n            autoComplete=\"given-name\"\n            placeholder=\"First name\"\n            aria-label=\"First name\"\n            defaultValue={customer.firstName ?? ''}\n            minLength={2}\n          />\n          </div>\n          <div className=\"mb-3\" >\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"lastName\">Last name</label>\n          <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"lastName\"\n            name=\"lastName\"\n            type=\"text\"\n            autoComplete=\"family-name\"\n            placeholder=\"Last name\"\n            aria-label=\"Last name\"\n            defaultValue={customer.lastName ?? ''}\n            minLength={2}\n          />\n          </div>\n          <div className=\"mb-3\" >\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"phone\">Mobile</label>\n          <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"phone\"\n            name=\"phone\"\n            type=\"tel\"\n            autoComplete=\"tel\"\n            placeholder=\"Mobile\"\n            aria-label=\"Mobile\"\n            defaultValue={customer.phone ?? ''}\n          />\n          </div>\n          <div className=\"mb-3\" >\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">Email address</label>\n          <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            required\n            placeholder=\"Email address\"\n            aria-label=\"Email address\"\n            defaultValue={customer.email ?? ''}\n          />\n          </div>\n        <div className=\"mb-3\" >\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"currentPassword\">Current password</label>\n          <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"currentPassword\"\n            name=\"currentPassword\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            placeholder=\"Current password\"\n            aria-label=\"Current password\"\n            minLength={8}\n          />\n          </div>\n          <div className=\"mb-3\" >\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"newPassword\">New password</label>\n          <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"newPassword\"\n            name=\"newPassword\"\n            type=\"password\"\n            placeholder=\"New password\"\n            aria-label=\"New password\"\n            minLength={8}\n          />\n          </div>\n          <small>Passwords must be at least 8 characters.</small>\n        </fieldset>\n        <div className=\"flex items-center justify-between\">\n      <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" \n      type=\"submit\" disabled={state !== 'idle'}>\n      {state !== 'idle' ? 'Updating' : 'Update'}\n      </button>\n      <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"/account/recover\">\n        Forgot Password?\n      </a>\n    </div>\n      </Form>\n      </div>\n        {/*\n        <div className=\"w-full h-full justify-center items-center\">\n      <div className=\"flex justify-center items-center\">\n        <button\n          onClick={() => handleTabChange('profile')}\n          className={`${\n            activeTab === 'profile' ? 'bg-blue-500 text-white' : 'bg-gray-300'\n          } px-10 py-2 rounded-l`}\n        >\n          Profile\n        </button>\n        <button\n          onClick={() => handleTabChange('password')}\n          className={`${\n            activeTab === 'password' ? 'bg-blue-500 text-white' : 'bg-gray-300'\n          } px-4 py-2 rounded-r`}\n        >\n          Change Password\n        </button>\n      </div>\n      <div className=\"mt-4 p-4 justify-center items-center\">\n        {activeTab === 'profile' ? (\n          <Form className=\"w-full justify-center items-center\" method=\"PUT\">\n          <fieldset>\n           <div className=\"mb-3\" >\n             <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\n               Email\n             </label>\n             <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n               id=\"email\"\n               name=\"email\"\n               type=\"email\"\n               autoComplete=\"email\"\n               required\n               placeholder=\"Email address\"\n               aria-label=\"Email address\"\n               defaultValue={customer.email ?? ''}\n               disabled/>\n           </div>\n           <div className=\"mb-3\" >\n             <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\n               First Name\n             </label>\n             <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n               id=\"firstName\"\n               name=\"firstName\"\n               type=\"text\"\n               autoComplete=\"given-name\"\n               placeholder=\"First name\"\n               aria-label=\"First name\"\n               defaultValue={customer.firstName ?? ''}\n               minLength={2}/>\n           </div>\n           <div className=\"mb-3\" >\n             <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\n               Last Name\n             </label>\n             <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n               id=\"lastName\"\n               name=\"lastName\"\n               type=\"text\"\n               autoComplete=\"family-name\"\n               placeholder=\"Last name\"\n               aria-label=\"Last name\"\n               defaultValue={customer.lastName ?? ''}\n               minLength={2}/>\n           </div>\n           <div className=\"mb-3\" >\n             <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\n               Phone\n             </label>\n             <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n               id=\"phone\"\n               name=\"phone\"\n               type=\"tel\"\n               autoComplete=\"tel\"\n               placeholder=\"Mobile\"\n               aria-label=\"Mobile\"\n               defaultValue={customer.phone ?? ''}/>\n           </div>\n            </fieldset>\n           <div className=\"flex items-center justify-between\">\n             <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n               Update\n             </button>\n             <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"/account/recover\">\n               Forgot Password?\n             </a>\n           </div>\n         </Form>\n        ) : (\n          <Form className=\"w-full justify-center items-center\" method=\"POST\">\n   <fieldset>\n    <div className=\"mb-3\" >\n      <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\n        Current Password\n      </label>\n      <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n        id=\"currentPassword\"\n        name=\"currentPassword\"\n        type=\"password\"\n        aria-label=\"Current password\"\n        minLength={8} required/>\n    </div>\n    <div className=\"mb-4\">\n      <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"password\">\n       New Password\n      </label>\n      <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" \n      id=\"password\"\n      name=\"password\"\n      type=\"password\"\n      aria-label=\"Password\"\n      minLength={8}\n      required/>\n    </div>\n    <div className=\"mb-4\">\n      <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"password\">\n       Confirm New Password\n      </label>\n      <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" \n      id=\"newPasswordConfirm\"\n      name=\"newPasswordConfirm\"\n      type=\"password\"\n      aria-label=\"New password confirm\"\n      minLength={8}/>\n    </div>\n     </fieldset>\n    <div className=\"flex items-center justify-between\">\n      <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n        Update\n      </button>\n      <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"/account/recover\">\n        Forgot Password?\n      </a>\n    </div>\n  </Form>\n        )}\n      </div>\n        </div>*/}\n     </>   \n  );\n}\n\nfunction getPassword(form) {\n  let password;\n  const currentPassword = form.get('currentPassword');\n  const newPassword = form.get('newPassword');\n  const newPasswordConfirm = form.get('newPasswordConfirm');\n\n  let passwordError;\n  if (newPassword && !currentPassword) {\n    passwordError = new Error('Current password is required.');\n  }\n\n  if (newPassword && newPassword !== newPasswordConfirm) {\n    passwordError = new Error('New passwords must match.');\n  }\n\n  if (newPassword && currentPassword && newPassword === currentPassword) {\n    passwordError = new Error(\n      'New password must be different than current password.',\n    );\n  }\n\n  if (passwordError) {\n    throw passwordError;\n  }\n\n  if (currentPassword && newPassword) {\n    password = newPassword;\n  } else {\n    password = currentPassword;\n  }\n\n  return String(password);\n}\n\nconst CUSTOMER_UPDATE_MUTATION = `#graphql\n  # https://shopify.dev/docs/api/storefront/latest/mutations/customerUpdate\n  mutation customerUpdate(\n    $customerAccessToken: String!,\n    $customer: CustomerUpdateInput!\n    $country: CountryCode\n    $language: LanguageCode\n  ) @inContext(language: $language, country: $country) {\n    customerUpdate(customerAccessToken: $customerAccessToken, customer: $customer) {\n      customer {\n        acceptsMarketing\n        email\n        firstName\n        id\n        lastName\n        phone\n      }\n      customerAccessToken {\n        accessToken\n        expiresAt\n      }\n      customerUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n"],
  "mappings": "6IACA,IAAAA,EAAgC,OAsH5B,IAAAC,EAAA,OA9GSC,EAAO,IACX,CAAC,CAAC,MAAO,SAAS,CAAC,EAuFb,SAARC,GAAkC,CACvC,IAAMC,EAAUC,EAAiB,EAC3B,CAAC,MAAAC,CAAK,EAAIC,EAAc,EAExBC,EADSC,EAAc,GACJ,UAAYL,GAAS,SACxC,CAACM,EAAWC,CAAY,KAAI,YAAS,SAAS,EAE9CC,EAAmBC,GAAQ,CAC/BF,EAAaE,CAAG,CAClB,EAEMC,EAAgBC,GAAM,CAC1BA,EAAE,eAAe,EAKjB,QAAQ,IAAI,gBAAiB,WAAW,EACxC,QAAQ,IAAI,iBAAkB,YAAY,CAC5C,EAEA,SACE,mBACA,mBAAC,OAAI,UAAU,4CACb,oBAACC,EAAA,CAAK,UAAU,qCAAqC,OAAO,MAC5D,qBAAC,YACC,qBAAC,OAAI,UAAU,OACb,oBAAC,SAAM,UAAU,6CAA6C,QAAQ,YAAY,sBAAU,KAC5F,OAAC,SAAM,UAAU,6HACf,GAAG,YACH,KAAK,YACL,KAAK,OACL,aAAa,aACb,YAAY,aACZ,aAAW,aACX,aAAcR,EAAS,WAAa,GACpC,UAAW,EACb,GACA,KACA,QAAC,OAAI,UAAU,OACf,oBAAC,SAAM,UAAU,6CAA6C,QAAQ,WAAW,qBAAS,KAC1F,OAAC,SAAM,UAAU,6HACf,GAAG,WACH,KAAK,WACL,KAAK,OACL,aAAa,cACb,YAAY,YACZ,aAAW,YACX,aAAcA,EAAS,UAAY,GACnC,UAAW,EACb,GACA,KACA,QAAC,OAAI,UAAU,OACf,oBAAC,SAAM,UAAU,6CAA6C,QAAQ,QAAQ,kBAAM,KACpF,OAAC,SAAM,UAAU,6HACf,GAAG,QACH,KAAK,QACL,KAAK,MACL,aAAa,MACb,YAAY,SACZ,aAAW,SACX,aAAcA,EAAS,OAAS,GAClC,GACA,KACA,QAAC,OAAI,UAAU,OACf,oBAAC,SAAM,UAAU,6CAA6C,QAAQ,QAAQ,yBAAa,KAC3F,OAAC,SAAM,UAAU,6HACf,GAAG,QACH,KAAK,QACL,KAAK,QACL,aAAa,QACb,SAAQ,GACR,YAAY,gBACZ,aAAW,gBACX,aAAcA,EAAS,OAAS,GAClC,GACA,KACF,QAAC,OAAI,UAAU,OACb,oBAAC,SAAM,UAAU,6CAA6C,QAAQ,kBAAkB,4BAAgB,KACxG,OAAC,SAAM,UAAU,6HACf,GAAG,kBACH,KAAK,kBACL,KAAK,WACL,aAAa,mBACb,YAAY,mBACZ,aAAW,mBACX,UAAW,EACb,GACA,KACA,QAAC,OAAI,UAAU,OACf,oBAAC,SAAM,UAAU,6CAA6C,QAAQ,cAAc,wBAAY,KAChG,OAAC,SAAM,UAAU,6HACf,GAAG,cACH,KAAK,cACL,KAAK,WACL,YAAY,eACZ,aAAW,eACX,UAAW,EACb,GACA,KACA,OAAC,SAAM,oDAAwC,GACjD,KACA,QAAC,OAAI,UAAU,oCACjB,oBAAC,UAAO,UAAU,+GAClB,KAAK,SAAS,SAAUF,IAAU,OACjC,SAAAA,IAAU,OAAS,WAAa,SACjC,KACA,OAAC,KAAE,UAAU,kFAAkF,KAAK,mBAAmB,4BAEvH,GACF,GACE,EACA,EA6ID,CAEL",
  "names": ["import_react", "import_jsx_runtime", "meta", "AccountProfile", "account", "useOutletContext", "state", "useNavigation", "customer", "useActionData", "activeTab", "setActiveTab", "handleTabChange", "tab", "handleSubmit", "e", "Form"]
}
