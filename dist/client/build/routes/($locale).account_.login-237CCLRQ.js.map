{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account_.login.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport {Form, Link, useActionData} from '@remix-run/react';\nimport {\n  Card,\n  Input,\n  Checkbox,\n  Typography,\n} from \"@material-tailwind/react\"; \n\nexport const meta = () => {\n  return [{title: 'Login'}];\n};\n\nexport async function loader({context}) {\n  if (await context.session.get('customerAccessToken')) {\n\n    return redirect('/account');\n  }\n  return json({});\n}\n\nexport async function action({request, context}) {\n  const {session, storefront} = context;\n\n  if (request.method !== 'POST') {\n    return json({error: 'Method not allowed'}, {status: 405});\n  }\n\n  try {\n    const form = await request.formData();\n    const email = String(form.has('email') ? form.get('email') : '');\n    const password = String(form.has('password') ? form.get('password') : '');\n    const validInputs = Boolean(email && password);\n\n    if (!validInputs) {\n      throw new Error('Please provide both an email and a password.');\n    }\n\n    const {customerAccessTokenCreate} = await storefront.mutate(\n      LOGIN_MUTATION,\n      {\n        variables: {\n          input: {email, password},\n        },\n      },\n    );\n\n    if (!customerAccessTokenCreate?.customerAccessToken?.accessToken) {\n      throw new Error(customerAccessTokenCreate?.customerUserErrors[0].message);\n    }\n\n    const {customerAccessToken} = customerAccessTokenCreate;\n    console.log(customerAccessToken)\n    session.set('customerAccessToken', customerAccessToken);\n\n    return redirect('/account', {\n      headers: {\n        'Set-Cookie': await session.commit(),\n      },\n    });\n  } catch (error) {\n    if (error instanceof Error) {\n      return json({error: error.message}, {status: 400});\n    }\n    return json({error}, {status: 400});\n  }\n}\n\nexport default function Login() {\n  const data = useActionData();\n  const error = data?.error || null;\n\n  return (\n    <>\n    {/*\n    <div className=\"login\">\n      <h1>Sign in.</h1>\n      <Form method=\"POST\">\n        <fieldset>\n          <label htmlFor=\"email\">Email address  New</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            required\n            placeholder=\"Email address\"\n            aria-label=\"Email address\"\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autoFocus\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            placeholder=\"Password\"\n            aria-label=\"Password\"\n            minLength={8}\n            required\n          />\n        </fieldset>\n        {error ? (\n          <p>\n            <mark>\n              <small>{error}</small>\n            </mark>\n          </p>\n        ) : (\n          <br />\n        )}\n        <button type=\"submit\">Sign in</button>\n      </Form>\n      <br />\n      <div>\n        <p>\n          <Link to=\"/account/recover\">Forgot password \u2192</Link>\n        </p>\n        <p>\n          <Link to=\"/account/register\">Register \u2192</Link>\n        </p>\n      </div>\n        </div>*/}\n<div className=\"flex flex-col-reverse sm:flex-row\">\n<div className=\"sm:w-1/2 hidden sm:block\">\n        {/* Add your image here */}\n        <img\n          src=\"https://media.sugarpop.com/upload/LoginSideImg.png\"\n          alt=\"Login Background\"\n          className=\"w-full h-full object-cover\"\n        />\n      </div>\n      {/* Left Side - Form */}\n      <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div>\n            <img\n              className=\"mx-auto h-12 w-auto\"\n              src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n              alt=\"Workflow\"\n            />\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\n            <p className=\"mt-2 text-center text-sm text-gray-600\">\n              Or{' '}\n              <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                start your 14-day free trial\n              </a>\n            </p>\n          </div>\n          <form className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\n            <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n              <div>\n                <label htmlFor=\"email-address\" className=\"sr-only\">\n                  Email address\n                </label>\n                <input\n                  id=\"email-address\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  className=\"appearance-none rounded-none relative block\n                  w-full px-3 py-2 border border-gray-300\n                  placeholder-gray-500 text-gray-900 rounded-t-md\n                  focus:outline-none focus:ring-indigo-500\n                  focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Email address\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"password\" className=\"sr-only\">\n                  Password\n                </label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"appearance-none rounded-none relative block\n                  w-full px-3 py-2 border border-gray-300\n                  placeholder-gray-500 text-gray-900 rounded-b-md\n                  focus:outline-none focus:ring-indigo-500\n                  focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                  placeholder=\"Password\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"remember-me\"\n                  name=\"remember-me\"\n                  type=\"checkbox\"\n                  className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500\n                  border-gray-300 rounded\"\n                />\n                <label htmlFor=\"remember-me\" className=\"ml-2 block text-sm text-gray-900\">\n                  Remember me\n                </label>\n              </div>\n\n              <div className=\"text-sm\">\n                <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                  Forgot your password?\n                </a>\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                className=\"group relative w-full flex justify-center\n                py-2 px-4 border border-transparent text-sm font-medium\n                rounded-md text-white bg-indigo-600 hover:bg-indigo-700\n                focus:outline-none focus:ring-2 focus:ring-offset-2\n                focus:ring-indigo-500\"\n              >\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  <LockClosedIcon className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\"\n                  aria-hidden=\"true\" />\n                </span>\n                Sign in\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n      {/* Right Side - Picture */}\n      \n    </div>\n    </>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/mutations/customeraccesstokencreate\nconst LOGIN_MUTATION = `#graphql\n  mutation login($input: CustomerAccessTokenCreateInput!) {\n    customerAccessTokenCreate(input: $input) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n      customerAccessToken {\n        accessToken\n        expiresAt\n      }\n    }\n  }\n`;\n"],
  "mappings": "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",
  "names": ["import_react"]
}
