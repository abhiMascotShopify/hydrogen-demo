{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).collections.$handle.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport React, { useState } from 'react';\nimport {Await,useLoaderData, Link} from '@remix-run/react';\nimport {\n  Pagination,\n  getPaginationVariables,\n  Image,\n  Money,\n} from '@shopify/hydrogen';\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\nimport { useMediaQuery } from 'react-responsive';\nimport {\n  VariantSelector,\n  getSelectedProductOptions,\n  CartForm,\n} from '@shopify/hydrogen';\nimport {useVariantUrl} from '~/utils';\n\nexport const meta = ({data}) => {\n  return [{title: `Hydrogen | ${data.collection.title} Collection`}];\n};\n\nexport async function loader({request, params, context}) {\n  const {handle} = params;\n  const {storefront} = context;\n  const paginationVariables = getPaginationVariables(request, {\n    pageBy: 8,\n  });\n\n  if (!handle) {\n    return redirect('/collections');\n  }\n\n  const {collection} = await storefront.query(COLLECTION_QUERY, {\n    variables: {handle, ...paginationVariables},\n  });\n\n  if (!collection) {\n    throw new Response(`Collection ${handle} not found`, {\n      status: 404,\n    });\n  }\n  return json({collection});\n}\n\nexport default function Collection() {\n  const {collection} = useLoaderData();\n/*\n  return (\n    <div className=\"collection\">\n      <h1>{collection.title}</h1>\n      <p className=\"collection-description\">{collection.description}</p>\n      <Pagination connection={collection.products}>\n        {({nodes, isLoading, PreviousLink, NextLink}) => (\n          <>\n            <PreviousLink>\n              {isLoading ? 'Loading...' : <span>\u2191 Load previous</span>}\n            </PreviousLink>\n            <ProductsGrid products={nodes} />\n            <br />\n            <NextLink>\n              {isLoading ? 'Loading...' : <span>Load more \u2193</span>}\n            </NextLink>\n          </>\n        )}\n      </Pagination>\n    </div>\n  );\n}\n*/\nlet productsToShow =[]\nconst lines = []\n\n\nconst [startIndex, setStartIndex] = useState(0);\n//const [endIndex, setEndIndex]  = useState();\n\n\nconst isLargeScreen = useMediaQuery({ minWidth: 1024 });\nconst endIndex = isLargeScreen ? 4 : 2;\n\nif(collection.products != null || collection.products != undefined ){\n  //console.log(products.edges[0].node)\n  console.log(collection.products.nodes);\n  productsToShow = collection.products.nodes;\n  //console.log(productsToShow);\n}\n//  const isMobile = useMediaQuery({ maxWidth: 640 });\n//  const isTablet = useMediaQuery({ minWidth: 641, maxWidth: 1024 });\n\ncollection.products.nodes.map((product) => {\nproduct.variants.nodes.map((line)=>{\n  console.log(line)\n  if(line.metafields[0]!=null && line.metafields[0].value=='true'){\n    lines.push({\n      merchandiseId: line.id,\n      quantity: 1,\n    })\n  }\n});\n})\n\nreturn (\n  <div className=\"w-full max-w-screen-xl mx-auto lg:px-24 sm:px-4 md:px-6\">\n  <div className=\"relative\">\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-4\">\n      {productsToShow.map((product, index) => (\n        <div key={product.id} className=\"w-full sm:w-1/2 md:w-1/3 lg:w-1/3 px-4 sm:px-1 md:px-3\">\n          <div className=\"bg-white rounded-lg shadow-lg p-2\" style={{ boxShadow: '0px 4px 8px rgba(255, 217, 90, 0.5)' }}>\n            <img\n              src={product.images.edges[0].node.url}\n              alt={product.title}\n              className=\"w-full h-auto\"\n            />\n            <Link to={`/products/${product.handle}`}>\n              <h2 className=\"text-lg font-semibold mt-2 text-center\">{product.title}</h2>\n            </Link>\n            <div className='h-12'><h1 className='text-center font-bold h-full w-full'>255</h1></div>\n            <div className=\"px-1 py-1 flex justify-between items-center flex-col sm:flex-row\">\n              <div className=\"mr-3\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 33\" xmlSpace=\"preserve\" width=\"2.8em\" height=\"2.8em\">\n                  <path d=\"M9 .5h14c4.7 0 8.5 3.8 8.5 8.5v14c0 4.7-3.8 8.5-8.5 8.5H9C4.3 31.5.5 27.7.5 23V9C.5 4.3 4.3.5 9 .5z\" fill=\"rgb(255, 255, 255)\" stroke=\"rgb(0, 0, 0)\" />\n                  <path d=\"M22.3 11.8c.4.4.7.9.9 1.4.2.5.3 1.1.3 1.6 0 .6-.1 1.1-.3 1.6-.2.5-.5 1-.9 1.4l-5.6 5.6s-.1 0-.1.1h-.2s-.1 0-.1-.1l-5.6-5.6C10 17 9.5 16 9.5 14.9c0-1.1.3-2.1 1-2.9.7-.8 1.7-1.3 2.7-1.5 1.1-.1 2.1.2 3 .8l.3.2.3-.2c.8-.6 1.8-.9 2.8-.8 1.1.1 2 .5 2.7 1.3z\" fill=\"none\" stroke=\"rgb(0, 0, 0)\"></path>\n                </svg>\n              </div>\n              {console.log(lines)}\n              <CartForm route=\"/cart\" inputs={{ lines: lines[index] }} action={CartForm.ACTIONS.LinesAdd} width=\"100%\">\n                {(fetcher) => (\n                  <>\n                    <button className=\"w-full h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 px-1 rounded-lg\"\n                      type=\"submit\"\n                      onClick={() => {\n                        window.location.href = window.location.href + '#cart-aside';\n                      }}\n                    >\n                      Add To Cart\n                    </button>\n                  </>\n                )}\n              </CartForm>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n</div>\n    );\n            }\n\nfunction ProductsGrid({products}) {\n  return (\n    <div className=\"products-grid\">\n      {products.map((product, index) => {\n        return (\n          <ProductItem\n            key={product.id}\n            product={product}\n            loading={index < 8 ? 'eager' : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nfunction ProductItem({product, loading}) {\n  const variant = product.variants.nodes[0];\n  const variantUrl = useVariantUrl(product.handle, variant.selectedOptions);\n  return (\n    <Link\n      className=\"product-item\"\n      key={product.id}\n      prefetch=\"intent\"\n      to={variantUrl}\n    >\n      {product.featuredImage && (\n        <Image\n          alt={product.featuredImage.altText || product.title}\n          aspectRatio=\"1/1\"\n          data={product.featuredImage}\n          loading={loading}\n          sizes=\"(min-width: 45em) 400px, 100vw\"\n        />\n      )}\n      <h4>{product.title}</h4>\n      <small>\n        <Money data={product.priceRange.minVariantPrice} />\n      </small>\n    </Link>\n  );\n}\n\nconst PRODUCT_ITEM_FRAGMENT = `#graphql\n  fragment MoneyProductItem on MoneyV2 {\n    amount\n    currencyCode\n  }\n  fragment ProductItem on Product {\n    id\n    handle\n    title\n    handle\n    featuredImage {\n      id\n      altText\n      url\n      width\n      height\n    }\n    priceRange {\n      minVariantPrice {\n        ...MoneyProductItem\n      }\n      maxVariantPrice {\n        ...MoneyProductItem\n      }\n    }\n    images(first:10){\n      edges{\n        node{\n          url\n        }\n      }\n    }\n    metafields(identifiers: [{namespace: \"custom\", key: \"what_to_expect\"},{namespace: \"custom\", key: \"key_ingredients\"}, {namespace: \"custom\", key: \"how_to_use1\"},{namespace: \"custom\", key: \"who_can_use\"},{namespace: \"custom\", key: \"why_we\"} ]){\n      key\n      value\n    }\n    variants(first: 1) {\n      nodes {\n        selectedOptions {\n          name\n          value\n        }\n        metafields(identifiers: [{namespace: \"custom\", key: \"isdefault\"} ]){\n                              key\n                              value\n                            }\n      }\n    }\n  }\n`;\n\n// NOTE: https://shopify.dev/docs/api/storefront/2022-04/objects/collection\nconst COLLECTION_QUERY = `#graphql\n  ${PRODUCT_ITEM_FRAGMENT}\n  query Collection(\n    $handle: String!\n    $country: CountryCode\n    $language: LanguageCode\n    $first: Int\n    $last: Int\n    $startCursor: String\n    $endCursor: String\n  ) @inContext(country: $country, language: $language) {\n    collection(handle: $handle) {\n      id\n      handle\n      title\n      description\n      products(\n        first: $first,\n        last: $last,\n        before: $startCursor,\n        after: $endCursor\n      ) {\n        nodes {\n          ...ProductItem\n        }\n        pageInfo {\n          hasPreviousPage\n          hasNextPage\n          hasNextPage\n          endCursor\n        }\n      }\n    }\n  }\n`;\n"],
  "mappings": "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",
  "names": []
}
