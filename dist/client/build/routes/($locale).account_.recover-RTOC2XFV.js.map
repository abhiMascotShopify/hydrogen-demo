{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account_.recover.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport {Form, Link, useActionData} from '@remix-run/react';\n\nexport async function loader({context}) {\n  const customerAccessToken = await context.session.get('customerAccessToken');\n  if (customerAccessToken) {\n    return redirect('/account');\n  }\n\n  return json({});\n}\n\nexport async function action({request, context}) {\n  const {storefront} = context;\n  const form = await request.formData();\n  const email = form.has('email') ? String(form.get('email')) : null;\n\n  if (request.method !== 'POST') {\n    return json({error: 'Method not allowed'}, {status: 405});\n  }\n\n  try {\n    if (!email) {\n      throw new Error('Please provide an email.');\n    }\n    await storefront.mutate(CUSTOMER_RECOVER_MUTATION, {\n      variables: {email},\n    });\n\n    return json({resetRequested: true});\n  } catch (error) {\n    const resetRequested = false;\n    if (error instanceof Error) {\n      return json({error: error.message, resetRequested}, {status: 400});\n    }\n    return json({error, resetRequested}, {status: 400});\n  }\n}\n\nexport default function Recover() {\n  const action = useActionData();\n\n  return (\n    <div className=\"account-recover\">\n      <div>\n        {action?.resetRequested ? (\n          <>\n            <h1>Request Sent.</h1>\n            <p>\n              If that email address is in our system, you will receive an email\n              with instructions about how to reset your password in a few\n              minutes.\n            </p>\n            <br />\n            <Link to=\"/account/login\">Return to Login</Link>\n          </>\n        ) : (\n          <>\n            <h1>Forgot Password.</h1>\n            <p>\n              Enter the email address associated with your account to receive a\n              link to reset your password.\n            </p>\n            <br />\n            <Form method=\"POST\">\n              <fieldset>\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  aria-label=\"Email address\"\n                  autoComplete=\"email\"\n                  // eslint-disable-next-line jsx-a11y/no-autofocus\n                  autoFocus\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email address\"\n                  required\n                  type=\"email\"\n                />\n              </fieldset>\n              {action?.error ? (\n                <p>\n                  <mark>\n                    <small>{action.error}</small>\n                  </mark>\n                </p>\n              ) : (\n                <br />\n              )}\n              <button type=\"submit\">Request Reset Link</button>\n            </Form>\n            <div>\n              <br />\n              <p>\n                <Link to=\"/account/login\">Login \u2192</Link>\n              </p>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/mutations/customerrecover\nconst CUSTOMER_RECOVER_MUTATION = `#graphql\n  mutation customerRecover(\n    $email: String!,\n    $country: CountryCode,\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    customerRecover(email: $email) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;AA8CU;AAPK,SAAR,UAA2B;AAChC,QAAM,SAAS,cAAc;AAE7B,SACE,mDAAC,SAAI,WAAU,mBACb,6DAAC,SACE,kBAAQ,iBACP,sFACE;AAAA,uDAAC,QAAG,6BAAJ;AAAA;AAAA;AAAA;AAAA,WAAiB;AAAA,IACjB,mDAAC,OAAE,sJAAH;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA,IACJ,mDAAC,QAAK,IAAG,kBAAiB,+BAA1B;AAAA;AAAA;AAAA;AAAA,WAAyC;AAAA,OAR3C;AAAA;AAAA;AAAA;AAAA,SASA,IAEA,sFACE;AAAA,uDAAC,QAAG,gCAAJ;AAAA;AAAA;AAAA;AAAA,WAAoB;AAAA,IACpB,mDAAC,OAAE,8GAAH;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA,IACJ,mDAAC,QAAK,QAAO,QACX;AAAA,yDAAC,cACC;AAAA,2DAAC,WAAM,SAAQ,SAAQ,qBAAvB;AAAA;AAAA;AAAA;AAAA,eAA4B;AAAA,QAC5B;AAAA,UAAC;AAAA;AAAA,YACC,cAAW;AAAA,YACX,cAAa;AAAA,YAEb,WAAS;AAAA,YACT,IAAG;AAAA,YACH,MAAK;AAAA,YACL,aAAY;AAAA,YACZ,UAAQ;AAAA,YACR,MAAK;AAAA;AAAA,UATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUA;AAAA,WAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,MACC,QAAQ,QACP,mDAAC,OACC,6DAAC,UACC,6DAAC,WAAO,iBAAO,SAAf;AAAA;AAAA;AAAA;AAAA,aAAqB,KADvB;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA,IAEA,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAI;AAAA,MAEN,mDAAC,YAAO,MAAK,UAAS,kCAAtB;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,SAxB1C;AAAA;AAAA;AAAA;AAAA,WAyBA;AAAA,IACA,mDAAC,SACC;AAAA,yDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAI;AAAA,MACJ,mDAAC,OACC,6DAAC,QAAK,IAAG,kBAAiB,4BAA1B;AAAA;AAAA;AAAA;AAAA,aAAiC,KADnC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAtCF;AAAA;AAAA;AAAA;AAAA,SAuCA,KApDJ;AAAA;AAAA;AAAA;AAAA,SAsDA,KAvDF;AAAA;AAAA;AAAA;AAAA,SAwDA;AAEJ;",
  "names": []
}
