{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account_.login.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport {Form, Link, useActionData} from '@remix-run/react';\nimport {\n  Card,\n  Input,\n  Checkbox,\n  Typography,\n} from \"@material-tailwind/react\";\n\n\nimport { LockClosedIcon } from '@heroicons/react/solid' \n\nexport const meta = () => {\n  return [{title: 'Login'}];\n};\n\nexport async function loader({context}) {\n  if (await context.session.get('customerAccessToken')) {\n\n    return redirect('/account');\n  }\n  return json({});\n}\n\nexport async function action({request, context}) {\n  const {session, storefront} = context;\n\n  if (request.method !== 'POST') {\n    return json({error: 'Method not allowed'}, {status: 405});\n  }\n\n  try {\n    const form = await request.formData();\n    const email = String(form.has('email') ? form.get('email') : '');\n    const password = String(form.has('password') ? form.get('password') : '');\n    const validInputs = Boolean(email && password);\n\n    if (!validInputs) {\n      throw new Error('Please provide both an email and a password.');\n    }\n\n    const {customerAccessTokenCreate} = await storefront.mutate(\n      LOGIN_MUTATION,\n      {\n        variables: {\n          input: {email, password},\n        },\n      },\n    );\n\n    if (!customerAccessTokenCreate?.customerAccessToken?.accessToken) {\n      throw new Error(customerAccessTokenCreate?.customerUserErrors[0].message);\n    }\n\n    const {customerAccessToken} = customerAccessTokenCreate;\n    //console.log(customerAccessToken)\n    session.set('customerAccessToken', customerAccessToken);\n\n    return redirect('/account', {\n      headers: {\n        'Set-Cookie': await session.commit(),\n      },\n    });\n  } catch (error) {\n    if (error instanceof Error) {\n      return json({error: error.message}, {status: 400});\n    }\n    return json({error}, {status: 400});\n  }\n}\n\nexport default function Login() {\n  const data = useActionData();\n  const error = data?.error || null;\n  console.log(data)\n  console.log(error)\n  return (\n    <>\n    {/*\n      <Form method=\"POST\">\n        <fieldset>\n          <label htmlFor=\"email\">Email address  New</label>\n          <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            required\n            placeholder=\"Email address\"\n            aria-label=\"Email address\"\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autoFocus\n          />\n          <label htmlFor=\"password\">Password</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            placeholder=\"Password\"\n            aria-label=\"Password\"\n            minLength={8}\n            required\n          />\n        </fieldset>\n        {error ? (\n          <p>\n            <mark>\n              <small>{error}</small>\n            </mark>\n          </p>\n        ) : (\n          <br />\n        )}\n        <button type=\"submit\">Sign in</button>\n      </Form>\n      <br />\n      <div>\n        <p>\n          <Link to=\"/account/recover\">Forgot password \u2192</Link>\n        </p>\n        <p>\n          <Link to=\"/account/register\">Register \u2192</Link>\n        </p>\n      </div>\n        </div>*/}\n        \n<div className=\"flex flex-col-reverse sm:flex-row\">\n<div className=\"sm:w-1/2 hidden sm:block\">\n\n        <img\n          src=\"https://media.sugarpop.com/upload/LoginSideImg.png\"\n          alt=\"Login Background\"\n          className=\"w-full h-full object-cover\"\n        />\n      </div>\n      <div className=\"w-full justify-center items-center flex flex-col\">\n  <Form className=\"w-full justify-center items-center\" method=\"POST\">\n   <fieldset>\n    <div className=\"mb-3\" >\n      <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\n        Email\n      </label>\n      <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        autoComplete=\"email\"\n        placeholder=\"Email address\"\n        aria-label=\"Email address\"\n        required/>\n    </div>\n    <div className=\"mb-4\">\n      <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"password\">\n        Password\n      </label>\n      <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" \n      id=\"password\"\n      name=\"password\"\n      type=\"password\"\n      autoComplete=\"current-password\"\n      placeholder=\"Password\"\n      aria-label=\"Password\"\n      minLength={8}\n      required/>\n      {error ? (\n          <p className=\"text-red-500 text-xs italic\">{error}</p>\n        ) : (\n          <br />\n        )}\n    </div>\n     </fieldset>\n    <div className=\"flex items-center justify-between\">\n      <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n        Sign In\n      </button>\n      <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"/account/recover\">\n        Forgot Password?\n      </a>\n    </div>\n  </Form>\n  <p className=\"text-center text-gray-500 text-xs\">\n    &copy;2023. All rights reserved.\n  </p>\n</div>\n      \n    </div>\n       </>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/mutations/customeraccesstokencreate\nconst LOGIN_MUTATION = `#graphql\n  mutation login($input: CustomerAccessTokenCreateInput!) {\n    customerAccessTokenCreate(input: $input) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n      customerAccessToken {\n        accessToken\n        expiresAt\n      }\n    }\n  }\n`;\n"],
  "mappings": "sNAEA,IAAAA,EAKO,OAsEH,IAAAC,EAAA,OAjESC,EAAO,IACX,CAAC,CAAC,MAAO,OAAO,CAAC,EA0DX,SAARC,GAAyB,CAC9B,IAAMC,EAAOC,EAAc,EACrBC,EAAQF,GAAM,OAAS,KAC7B,eAAQ,IAAIA,CAAI,EAChB,QAAQ,IAAIE,CAAK,KAEf,mBAkDJ,oBAAC,OAAI,UAAU,oCACf,oBAAC,OAAI,UAAU,2BAEP,mBAAC,OACC,IAAI,qDACJ,IAAI,mBACJ,UAAU,6BACZ,EACF,KACA,QAAC,OAAI,UAAU,mDACnB,qBAACC,EAAA,CAAK,UAAU,qCAAqC,OAAO,OAC3D,qBAAC,YACA,qBAAC,OAAI,UAAU,OACb,oBAAC,SAAM,UAAU,6CAA6C,IAAI,WAAW,iBAE7E,KACA,OAAC,SAAM,UAAU,6HACf,GAAG,QACH,KAAK,QACL,KAAK,QACL,aAAa,QACb,YAAY,gBACZ,aAAW,gBACX,SAAQ,MACZ,KACA,QAAC,OAAI,UAAU,OACb,oBAAC,SAAM,UAAU,6CAA6C,IAAI,WAAW,oBAE7E,KACA,OAAC,SAAM,UAAU,kIACjB,GAAG,WACH,KAAK,WACL,KAAK,WACL,aAAa,mBACb,YAAY,WACZ,aAAW,WACX,UAAW,EACX,SAAQ,KACPD,KACG,OAAC,KAAE,UAAU,8BAA+B,SAAAA,EAAM,KAElD,OAAC,OAAG,GAEV,GACC,KACD,QAAC,OAAI,UAAU,oCACb,oBAAC,UAAO,UAAU,+GAA+G,KAAK,SAAS,mBAE/I,KACA,OAAC,KAAE,UAAU,kFAAkF,KAAK,mBAAmB,4BAEvH,GACF,GACF,KACA,OAAC,KAAE,UAAU,oCAAoC,0CAEjD,GACF,GAEI,EACG,CAEP",
  "names": ["import_react", "import_jsx_runtime", "meta", "Login", "data", "useActionData", "error", "Form"]
}
