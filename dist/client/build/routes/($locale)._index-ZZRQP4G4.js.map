{
  "version": 3,
  "sources": ["../../../../app/routes/($locale)._index.jsx", "../../../../app/components/productCard.jsx"],
  "sourcesContent": ["import {defer} from '@shopify/remix-oxygen';\nimport {Await, useLoaderData, Link} from '@remix-run/react';\nimport {Suspense} from 'react';\nimport {Image, Money} from '@shopify/hydrogen';\nimport ProductCard from 'app/components/productCard';\n\nexport const meta = () => {\n  return [{title: 'Hydrogen | Home'}];\n};\n\nexport async function loader({context}) {\n  const {storefront} = context;\n  const {collections} = await storefront.query(FEATURED_COLLECTION_QUERY);\n  //console.log(collections);\n  const featuredCollection = collections.nodes[1];\n  const recommendedProducts = storefront.query(RECOMMENDED_PRODUCTS_QUERY);\n  const collection = collections;\n\n  return defer({featuredCollection, recommendedProducts,collections });\n}\n\nexport default function Homepage() {\n  const data = useLoaderData();\n  return (\n    <div className=\"home\">\n      <div className='flex'>\n      <FeaturedCollection collection={data.featuredCollection} />\n      <FeaturedCollection collection={data.featuredCollection} />\n      <FeaturedCollection collection={data.featuredCollection} />\n      </div>\n      \n      <RecommendedProducts products={data.recommendedProducts} />\n      <RecommendedProducts products={data.recommendedProducts} />\n      <RecommendedProducts products={data.recommendedProducts} />\n      <RecommendedProducts products={data.recommendedProducts} />\n\n    </div>\n  );\n}\n\nfunction FeaturedCollection({collection}) {\n  const image = collection.image;\n  return (\n    <Link\n      className=\"featured-collection\"\n      to={`/collections/${collection.handle}`}\n    >\n      {image && (\n        <div className=\"featured-collection-image\">\n          <Image data={image} sizes=\"100vw\" />\n        </div>\n      )}\n      <h1>{collection.title}</h1>\n    </Link>\n  );\n}\n\nfunction RecommendedProducts({products}) {\n  return (\n  <div className='flex'> \n      <Suspense fallback={<div>Loading...</div>}>\n        <Await resolve={products}> \n          {({products}) => (\n              products.nodes.map((product) => (\n                <ProductCard key={product.id} product={product} />\n              ))\n          )}\n        </Await>\n      </Suspense>\n      <br />\n    </div>\n  );\n}\n\nconst FEATURED_COLLECTION_QUERY = `#graphql\n  fragment FeaturedCollection on Collection {\n    id\n    title\n    image {\n      id\n      url\n      altText\n      width\n      height\n    }\n    handle\n  }\n  query FeaturedCollection($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    collections(first: 4, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...FeaturedCollection\n      }\n    }\n  }\n`;\n\nconst RECOMMENDED_PRODUCTS_QUERY = `#graphql\n  fragment RecommendedProduct on Product {\n    id\n    title\n    handle\n    priceRange {\n      minVariantPrice {\n        amount\n        currencyCode\n      }\n    }\n    images(first: 1) {\n      nodes {\n        id\n        url\n        altText\n        width\n        height\n      }\n    }\n  }\n  query RecommendedProducts ($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    products(first: 6, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...RecommendedProduct\n      }\n    }\n  }\n`;\n/*\nconst GET_COLLECTION_BY_HANDLE = gql`\nquery GetCollectionByHandle($handle: String!) {\n  collectionByHandle(handle: $handle) {\n    id\n    title\n    products(first: 10) {\n      edges {\n        node {\n          id\n          title\n          priceRange {\n            minVariantPrice {\n              amount\n              currencyCode\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nconsole.log(GET_COLLECTION_BY_HANDLE);*/\n\nconst COLLECTION_QUERY = `#graphql\n  fragment Collection on Collection {\n        id\n        title\n        handle\n        description\n      }\n  query Collections ($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    collections(first: 4, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...Collections\n      }\n    }\n  }\n`;", "import React from 'react';\r\n\r\nconst ProductCard = ({ product }) => {\r\n    const url = product.images.nodes[0].url;\r\n    //console.log(url);\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden m-5\">\r\n      <img className=\"w-full h-48 object-cover\" src={url} alt={product.title} />\r\n      <div className=\"p-4\">\r\n        <h2 className=\"text-xl font-semibold mb-2\">{product.title}</h2>\r\n        <p className=\"text-gray-600\">${product.priceRange.minVariantPrice.amount}</p>\r\n        <button className=\"mt-4 bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600 focus:outline-none\">\r\n          Add to Cart\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "products"]
}
