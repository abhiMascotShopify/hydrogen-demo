{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).collections.$handle.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport {useLoaderData, Link} from '@remix-run/react';\nimport {\n  Pagination,\n  getPaginationVariables,\n  Image,\n  Money,\n} from '@shopify/hydrogen';\nimport {useVariantUrl} from '~/utils';\n\nexport const meta = ({data}) => {\n  return [{title: `Hydrogen | ${data.collection.title} Collection`}];\n};\n\nexport async function loader({request, params, context}) {\n  const {handle} = params;\n  const {storefront} = context;\n  const paginationVariables = getPaginationVariables(request, {\n    pageBy: 8,\n  });\n\n  if (!handle) {\n    return redirect('/collections');\n  }\n\n  const {collection} = await storefront.query(COLLECTION_QUERY, {\n    variables: {handle, ...paginationVariables},\n  });\n\n  if (!collection) {\n    throw new Response(`Collection ${handle} not found`, {\n      status: 404,\n    });\n  }\n  return json({collection});\n}\n\nexport default function Collection() {\n  const {collection} = useLoaderData();\n\n  return (\n    <div className=\"collection\">\n      <h1>{collection.title}</h1>\n      <p className=\"collection-description\">{collection.description}</p>\n      <Pagination connection={collection.products}>\n        {({nodes, isLoading, PreviousLink, NextLink}) => (\n          <>\n            <PreviousLink>\n              {isLoading ? 'Loading...' : <span>\u2191 Load previous</span>}\n            </PreviousLink>\n            <ProductsGrid products={nodes} />\n            <br />\n            <NextLink>\n              {isLoading ? 'Loading...' : <span>Load more \u2193</span>}\n            </NextLink>\n          </>\n        )}\n      </Pagination>\n    </div>\n  );\n}\n\nfunction ProductsGrid({products}) {\n  return (\n    <div className=\"products-grid\">\n      {products.map((product, index) => {\n        return (\n          <ProductItem\n            key={product.id}\n            product={product}\n            loading={index < 8 ? 'eager' : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nfunction ProductItem({product, loading}) {\n  const variant = product.variants.nodes[0];\n  const variantUrl = useVariantUrl(product.handle, variant.selectedOptions);\n  return (\n    <Link\n      className=\"product-item\"\n      key={product.id}\n      prefetch=\"intent\"\n      to={variantUrl}\n    >\n      {product.featuredImage && (\n        <Image\n          alt={product.featuredImage.altText || product.title}\n          aspectRatio=\"1/1\"\n          data={product.featuredImage}\n          loading={loading}\n          sizes=\"(min-width: 45em) 400px, 100vw\"\n        />\n      )}\n      <h4>{product.title}</h4>\n      <small>\n        <Money data={product.priceRange.minVariantPrice} />\n      </small>\n    </Link>\n  );\n}\n\nconst PRODUCT_ITEM_FRAGMENT = `#graphql\n  fragment MoneyProductItem on MoneyV2 {\n    amount\n    currencyCode\n  }\n  fragment ProductItem on Product {\n    id\n    handle\n    title\n    featuredImage {\n      id\n      altText\n      url\n      width\n      height\n    }\n    priceRange {\n      minVariantPrice {\n        ...MoneyProductItem\n      }\n      maxVariantPrice {\n        ...MoneyProductItem\n      }\n    }\n    variants(first: 1) {\n      nodes {\n        selectedOptions {\n          name\n          value\n        }\n      }\n    }\n  }\n`;\n\n// NOTE: https://shopify.dev/docs/api/storefront/2022-04/objects/collection\nconst COLLECTION_QUERY = `#graphql\n  ${PRODUCT_ITEM_FRAGMENT}\n  query Collection(\n    $handle: String!\n    $country: CountryCode\n    $language: LanguageCode\n    $first: Int\n    $last: Int\n    $startCursor: String\n    $endCursor: String\n  ) @inContext(country: $country, language: $language) {\n    collection(handle: $handle) {\n      id\n      handle\n      title\n      description\n      products(\n        first: $first,\n        last: $last,\n        before: $startCursor,\n        after: $endCursor\n      ) {\n        nodes {\n          ...ProductItem\n        }\n        pageInfo {\n          hasPreviousPage\n          hasNextPage\n          hasNextPage\n          endCursor\n        }\n      }\n    }\n  }\n`;\n"],
  "mappings": "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",
  "names": []
}
